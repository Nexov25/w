{"version":3,"file":"make-cache-manager-store.js","sourceRoot":"/","sources":["Store/make-cache-manager-store.ts"],"names":[],"mappings":"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","sourcesContent":["import { caching, Store } from 'cache-manager'\nimport { proto } from '../../WAProto'\nimport { AuthenticationCreds } from '../Types'\nimport { BufferJSON, initAuthCreds } from '../Utils'\nimport logger from '../Utils/logger'\n\nconst makeCacheManagerAuthState = async(store: Store, sessionKey: string) => {\n\tconst defaultKey = (file: string): string => `${sessionKey}:${file}`\n\n\tconst databaseConn = await caching(store)\n\n\tconst writeData = async(file: string, data: object) => {\n\t\tlet ttl: number | undefined = undefined\n\t\tif(file === 'creds') {\n\t\t\tttl = 63115200 // 2 years\n\t\t}\n\n\t\tawait databaseConn.set(\n\t\t\tdefaultKey(file),\n\t\t\tJSON.stringify(data, BufferJSON.replacer),\n\t\t\tttl\n\t\t)\n\t}\n\n\tconst readData = async(file: string): Promise<AuthenticationCreds | null> => {\n\t\ttry {\n\t\t\tconst data = await databaseConn.get(defaultKey(file))\n\n\t\t\tif(data) {\n\t\t\t\treturn JSON.parse(data as string, BufferJSON.reviver)\n\t\t\t}\n\n\t\t\treturn null\n\t\t} catch(error) {\n\t\t\tlogger.error(error)\n\t\t\treturn null\n\t\t}\n\t}\n\n\tconst removeData = async(file: string) => {\n\t\ttry {\n\t\t\treturn await databaseConn.del(defaultKey(file))\n\t\t} catch{\n\t\t\tlogger.error(`Error removing ${file} from session ${sessionKey}`)\n\t\t}\n\t}\n\n\tconst clearState = async() => {\n\t\ttry {\n\t\t\tconst result = await databaseConn.store.keys(`${sessionKey}*`)\n\t\t\tawait Promise.all(\n\t\t\t\tresult.map(async(key) => await databaseConn.del(key))\n\t\t\t)\n\t\t} catch(err) {\n\t\t}\n\t}\n\n\tconst creds: AuthenticationCreds = (await readData('creds')) || initAuthCreds()\n\n\treturn {\n\t\tclearState,\n\t\tsaveCreds: () => writeData('creds', creds),\n\t\tstate: {\n\t\t\tcreds,\n\t\t\tkeys: {\n\t\t\t\tget: async(type: string, ids: string[]) => {\n\t\t\t\t\tconst data = {}\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\tids.map(async(id) => {\n\t\t\t\t\t\t\tlet value: proto.Message.AppStateSyncKeyData | AuthenticationCreds | null =\n                                await readData(`${type}-${id}`)\n\t\t\t\t\t\t\tif(type === 'app-state-sync-key' && value) {\n\t\t\t\t\t\t\t\tvalue = proto.Message.AppStateSyncKeyData.fromObject(value)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdata[id] = value\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\n\t\t\t\t\treturn data\n\t\t\t\t},\n\t\t\t\tset: async(data) => {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\tconst tasks: Promise<any>[] = []\n\t\t\t\t\tfor(const category in data) {\n\t\t\t\t\t\tfor(const id in data[category]) {\n\t\t\t\t\t\t\tconst value = data[category][id]\n\t\t\t\t\t\t\tconst key = `${category}-${id}`\n\t\t\t\t\t\t\ttasks.push(value ? writeData(key, value) : removeData(key))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tawait Promise.all(tasks)\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default makeCacheManagerAuthState"]}