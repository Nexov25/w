{"version":3,"file":"make-ordered-dictionary.js","sourceRoot":"/","sources":["Store/make-ordered-dictionary.ts"],"names":[],"mappings":"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","sourcesContent":["function makeOrderedDictionary<T>(idGetter: (item: T) => string) {\n\tconst array: T[] = []\n\tconst dict: { [_: string]: T } = { }\n\n\tconst get = (id: string): T | undefined => dict[id]\n\n\tconst update = (item: T) => {\n\t\tconst id = idGetter(item)\n\t\tconst idx = array.findIndex(i => idGetter(i) === id)\n\t\tif(idx >= 0) {\n\t\t\tarray[idx] = item\n\t\t\tdict[id] = item\n\t\t}\n\n\t\treturn false\n\t}\n\n\tconst upsert = (item: T, mode: 'append' | 'prepend') => {\n\t\tconst id = idGetter(item)\n\t\tif(get(id)) {\n\t\t\tupdate(item)\n\t\t} else {\n\t\t\tif(mode === 'append') {\n\t\t\t\tarray.push(item)\n\t\t\t} else {\n\t\t\t\tarray.splice(0, 0, item)\n\t\t\t}\n\n\t\t\tdict[id] = item\n\t\t}\n\t}\n\n\tconst remove = (item: T) => {\n\t\tconst id = idGetter(item)\n\t\tconst idx = array.findIndex(i => idGetter(i) === id)\n\t\tif(idx >= 0) {\n\t\t\tarray.splice(idx, 1)\n\t\t\tdelete dict[id]\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\treturn {\n\t\tarray,\n\t\tget,\n\t\tupsert,\n\t\tupdate,\n\t\tremove,\n\t\tupdateAssign: (id: string, update: Partial<T>) => {\n\t\t\tconst item = get(id)\n\t\t\tif(item) {\n\t\t\t\tObject.assign(item, update)\n\t\t\t\tdelete dict[id]\n\t\t\t\tdict[idGetter(item)] = item\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\treturn false\n\t\t},\n\t\tclear: () => {\n\t\t\tarray.splice(0, array.length)\n\t\t\tObject.keys(dict).forEach(key => {\n\t\t\t\tdelete dict[key]\n\t\t\t})\n\t\t},\n\t\tfilter: (contain: (item: T) => boolean) => {\n\t\t\tlet i = 0\n\t\t\twhile(i < array.length) {\n\t\t\t\tif(!contain(array[i])) {\n\t\t\t\t\tdelete dict[idGetter(array[i])]\n\t\t\t\t\tarray.splice(i, 1)\n\t\t\t\t} else {\n\t\t\t\t\ti += 1\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\ttoJSON: () => array,\n\t\tfromJSON: (newItems: T[]) => {\n\t\t\tarray.splice(0, array.length, ...newItems)\n\t\t}\n\t}\n}\n\nexport default makeOrderedDictionary"]}