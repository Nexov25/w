{"version":3,"file":"Product.js","sourceRoot":"/","sources":["Types/Product.ts"],"names":[],"mappings":"","sourcesContent":["import { WAMediaUpload } from './Message'\n\nexport type CatalogResult = {\n\tdata: {\n\t\tpaging: { cursors: { before: string, after: string } }\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tdata: any[]\n\t}\n}\n\nexport type ProductCreateResult = {\n\tdata: { product: {} }\n}\n\nexport type CatalogStatus = {\n\tstatus: string\n\tcanAppeal: boolean\n}\n\nexport type CatalogCollection = {\n\tid: string\n\tname: string\n\tproducts: Product[]\n\n\tstatus: CatalogStatus\n}\n\nexport type ProductAvailability = 'in stock'\n\nexport type ProductBase = {\n\tname: string\n\tretailerId?: string\n\turl?: string\n\tdescription: string\n\tprice: number\n\tcurrency: string\n\tisHidden?: boolean\n}\n\nexport type ProductCreate = ProductBase & {\n\t/** ISO country code for product origin. Set to undefined for no country */\n\toriginCountryCode: string | undefined\n\t/** images of the product */\n\timages: WAMediaUpload[]\n}\n\nexport type ProductUpdate = Omit<ProductCreate, 'originCountryCode'>\n\nexport type Product = ProductBase & {\n\tid: string\n\timageUrls: { [_: string]: string }\n\treviewStatus: { [_: string]: string }\n\tavailability: ProductAvailability\n}\n\nexport type OrderPrice = {\n\tcurrency: string\n\ttotal: number\n}\n\nexport type OrderProduct = {\n\tid: string\n\timageUrl: string\n\tname: string\n\tquantity: number\n\n\tcurrency: string\n\tprice: number\n}\n\nexport type OrderDetails = {\n\tprice: OrderPrice\n\tproducts: OrderProduct[]\n}\n\nexport type CatalogCursor = string\n\nexport type GetCatalogOptions = {\n\t/** cursor to start from */\n\tcursor?: CatalogCursor\n\t/** number of products to fetch */\n\tlimit?: number\n\n\tjid?: string\n}"]}