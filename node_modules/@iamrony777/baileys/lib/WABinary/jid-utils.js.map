{"version":3,"file":"jid-utils.js","sourceRoot":"/","sources":["WABinary/jid-utils.ts"],"names":[],"mappings":"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","sourcesContent":["export const S_WHATSAPP_NET = '@s.whatsapp.net'\nexport const OFFICIAL_BIZ_JID = '16505361212@c.us'\nexport const SERVER_JID = 'server@c.us'\nexport const PSA_WID = '0@c.us'\nexport const STORIES_JID = 'status@broadcast'\n\nexport type JidServer = 'c.us' | 'g.us' | 'broadcast' | 's.whatsapp.net' | 'call' | 'lid'\n\nexport type JidWithDevice = {\n    user: string\n    device?: number\n}\n\nexport type FullJid = JidWithDevice & {\n\tserver: JidServer | string\n\tdomainType?: number\n}\n\nexport const jidEncode = (user: string | number | null, server: JidServer, device?: number, agent?: number) => {\n\treturn `${user || ''}${!!agent ? `_${agent}` : ''}${!!device ? `:${device}` : ''}@${server}`\n}\n\nexport const jidDecode = (jid: string | undefined): FullJid | undefined => {\n\tconst sepIdx = typeof jid === 'string' ? jid.indexOf('@') : -1\n\tif(sepIdx < 0) {\n\t\treturn undefined\n\t}\n\n\tconst server = jid!.slice(sepIdx + 1)\n\tconst userCombined = jid!.slice(0, sepIdx)\n\n\tconst [userAgent, device] = userCombined.split(':')\n\tconst user = userAgent.split('_')[0]\n\n\treturn {\n\t\tserver,\n\t\tuser,\n\t\tdomainType: server === 'lid' ? 1 : 0,\n\t\tdevice: device ? +device : undefined\n\t}\n}\n\n/** is the jid a user */\nexport const areJidsSameUser = (jid1: string | undefined, jid2: string | undefined) => (\n\tjidDecode(jid1)?.user === jidDecode(jid2)?.user\n)\n/** is the jid a user */\nexport const isJidUser = (jid: string | undefined) => (jid?.endsWith('@s.whatsapp.net'))\n/** is the jid a group */\nexport const isLidUser = (jid: string | undefined) => (jid?.endsWith('@lid'))\n/** is the jid a broadcast */\nexport const isJidBroadcast = (jid: string | undefined) => (jid?.endsWith('@broadcast'))\n/** is the jid a group */\nexport const isJidGroup = (jid: string | undefined) => (jid?.endsWith('@g.us'))\n/** is the jid the status broadcast */\nexport const isJidStatusBroadcast = (jid: string) => jid === 'status@broadcast'\n\nexport const jidNormalizedUser = (jid: string | undefined) => {\n\tconst result = jidDecode(jid)\n\tif(!result) {\n\t\treturn ''\n\t}\n\n\tconst { user, server } = result\n\treturn jidEncode(user, server === 'c.us' ? 's.whatsapp.net' : server as JidServer)\n}\n"]}