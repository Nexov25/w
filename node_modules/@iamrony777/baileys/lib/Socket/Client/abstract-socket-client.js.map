{"version":3,"file":"abstract-socket-client.js","sourceRoot":"/","sources":["Socket/Client/abstract-socket-client.ts"],"names":[],"mappings":";;;AAAA,mCAAqC;AAIrC,MAAsB,oBAAqB,SAAQ,qBAAY;IAM9D,YAAmB,GAAQ,EAAS,MAAoB;QACvD,KAAK,EAAE,CAAA;QADW,QAAG,GAAH,GAAG,CAAK;QAAS,WAAM,GAAN,MAAM,CAAc;QAEvD,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAA;IACxB,CAAC;CAKD;AAdD,oDAcC","sourcesContent":["import { EventEmitter } from 'events'\nimport { URL } from 'url'\nimport { SocketConfig } from '../../Types'\n\nexport abstract class AbstractSocketClient extends EventEmitter {\n\tabstract get isOpen(): boolean\n\tabstract get isClosed(): boolean\n\tabstract get isClosing(): boolean\n\tabstract get isConnecting(): boolean\n\n\tconstructor(public url: URL, public config: SocketConfig) {\n\t\tsuper()\n\t\tthis.setMaxListeners(0)\n\t}\n\n\tabstract connect(): Promise<void>\n\tabstract close(): Promise<void>\n\tabstract send(str: Uint8Array | string, cb?: (err?: Error) => void): boolean;\n}"]}