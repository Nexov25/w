{"version":3,"file":"mobile-socket-client.js","sourceRoot":"/","sources":["Socket/Client/mobile-socket-client.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAAqC;AACrC,qEAA+D;AAE/D,MAAa,kBAAmB,SAAQ,6CAAoB;IAA5D;;QACW,WAAM,GAAkB,IAAI,CAAA;IA6DvC,CAAC;IA3DA,IAAI,MAAM;;QACT,OAAO,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,UAAU,MAAK,MAAM,CAAA;IAC1C,CAAC;IACD,IAAI,QAAQ;;QACX,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,UAAU,MAAK,QAAQ,CAAA;IACpE,CAAC;IACD,IAAI,SAAS;;QACZ,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,UAAU,MAAK,QAAQ,CAAA;IACpE,CAAC;IACD,IAAI,YAAY;;QACf,OAAO,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,UAAU,MAAK,SAAS,CAAA;IAC7C,CAAC;IAEK,OAAO;;;YACZ,IAAG,IAAI,CAAC,MAAM,EAAE;gBACf,OAAM;aACN;YAED,IAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBAErB,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAA;aAC9E;iBAAM;gBACN,IAAI,CAAC,MAAM,GAAG,IAAA,aAAO,EAAC;oBACrB,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ;oBACvB,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG;iBAClC,CAAC,CAAA;aACF;YAED,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAA;YAE9B,MAAM,MAAM,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAA;YAElG,KAAI,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC1B,MAAA,IAAI,CAAC,MAAM,0CAAE,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,IAAW,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;aACrE;YAED,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,IAAW,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;YACzE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,IAAW,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;;KACvE;IAEK,KAAK;;YACV,IAAG,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,OAAM;aACN;YAED,OAAO,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE;gBAClC,IAAI,CAAC,MAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;gBACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;YACnB,CAAC,CAAC,CAAA;QACH,CAAC;KAAA;IAED,IAAI,CAAC,GAAwB,EAAE,EAA0B;QACxD,IAAG,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;YACxB,OAAO,KAAK,CAAA;SACZ;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,CAAC,CAAA;IAC7C,CAAC;CAED;AA9DD,gDA8DC","sourcesContent":["import { connect, Socket } from 'net'\nimport { AbstractSocketClient } from './abstract-socket-client'\n\nexport class MobileSocketClient extends AbstractSocketClient {\n\tprotected socket: Socket | null = null\n\n\tget isOpen(): boolean {\n\t\treturn this.socket?.readyState === 'open'\n\t}\n\tget isClosed(): boolean {\n\t\treturn this.socket === null || this.socket?.readyState === 'closed'\n\t}\n\tget isClosing(): boolean {\n\t\treturn this.socket === null || this.socket?.readyState === 'closed'\n\t}\n\tget isConnecting(): boolean {\n\t\treturn this.socket?.readyState === 'opening'\n\t}\n\n\tasync connect(): Promise<void> {\n\t\tif(this.socket) {\n\t\t\treturn\n\t\t}\n\n\t\tif(this.config.agent) {\n\n\t\t\tthrow new Error('There are not support for proxy agent for mobile connection')\n\t\t} else {\n\t\t\tthis.socket = connect({\n\t\t\t\thost: this.url.hostname,\n\t\t\t\tport: Number(this.url.port) || 443\n\t\t\t})\n\t\t}\n\n\t\tthis.socket.setMaxListeners(0)\n\n\t\tconst events = ['close', 'connect', 'data', 'drain', 'end', 'error', 'lookup', 'ready', 'timeout']\n\n\t\tfor(const event of events) {\n\t\t\tthis.socket?.on(event, (...args: any[]) => this.emit(event, ...args))\n\t\t}\n\n\t\tthis.socket.on('data', (...args: any[]) => this.emit('message', ...args))\n\t\tthis.socket.on('ready', (...args: any[]) => this.emit('open', ...args))\n\t}\n\n\tasync close(): Promise<void> {\n\t\tif(!this.socket) {\n\t\t\treturn\n\t\t}\n\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.socket!.end(resolve)\n\t\t\tthis.socket = null\n\t\t})\n\t}\n\n\tsend(str: string | Uint8Array, cb?: (err?: Error) => void): boolean {\n\t\tif(this.socket === null) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn this.socket.write(str, undefined, cb)\n\t}\n\n}\n"]}