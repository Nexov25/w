{"version":3,"file":"generics.js","sourceRoot":"/","sources":["Utils/generics.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qCAAiC;AACjC,kDAAiD;AACjD,mCAAoC;AACpC,2BAAsC;AAEtC,2CAAqC;AACrC,2EAA4E;AAC5E,oCAA8G;AAC9G,0CAAkE;AAElE,MAAM,YAAY,GAAG;IACpB,KAAK,EAAE,KAAK;IACZ,QAAQ,EAAE,QAAQ;IAClB,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,SAAS;CACpB,CAAA;AAEY,QAAA,QAAQ,GAAG;IACvB,MAAM,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,SAAS,CAA6B;IAC7E,KAAK,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,SAAS,CAA6B;IAC5E,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,OAAO,CAA6B;IAC7E,0DAA0D;IAC1D,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,YAAY,CAA6B;IAClF,yDAAyD;IACzD,WAAW,EAAE,OAAO,CAAC,EAAE,CAAC,CAAE,YAAY,CAAC,IAAA,aAAQ,GAAE,CAAC,IAAI,QAAQ,EAAE,OAAO,EAAE,IAAA,YAAO,GAAE,CAA8B;CAChH,CAAA;AAEY,QAAA,UAAU,GAAG;IACzB,QAAQ,EAAE,CAAC,CAAC,EAAE,KAAU,EAAE,EAAE;QAC3B,IAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,UAAU,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,MAAK,QAAQ,EAAE;YACrF,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,KAAI,KAAK,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAA;SACrF;QAED,OAAO,KAAK,CAAA;IACb,CAAC;IACD,OAAO,EAAE,CAAC,CAAC,EAAE,KAAU,EAAE,EAAE;QAC1B,IAAG,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,EAAE;YAC9F,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAA;YACrC,OAAO,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAA;SACpF;QAED,OAAO,KAAK,CAAA;IACb,CAAC;CACD,CAAA;AAEM,MAAM,YAAY,GAAG,CAC3B,GAAyC,EACzC,IAAI,GAAG,IAAI,EACV,EAAE,CAAC,CACJ,CAAC,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,EAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,WAAW,MAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS,CAAA,CAAC,IAAI,EAAE,CAC/D,CAAA;AALY,QAAA,YAAY,gBAKxB;AAEM,MAAM,mBAAmB,GAAG,CAAC,GAAe,EAAE,EAAE;IACtD,MAAM,GAAG,GAAG,IAAA,oBAAW,EAAC,CAAC,CAAC,CAAA;IAC1B,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAA;IACb,IAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;QACX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;KACZ;IAED,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAC1D,CAAC,CAAA;AARY,QAAA,mBAAmB,uBAQ/B;AAEM,MAAM,gBAAgB,GAAG,CAAC,CAAsB,EAAE,EAAE;IAC1D,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IAC3B,IAAG,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAA;KAC/C;IAED,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACvB,IAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE;QAChB,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,MAAM,sBAAsB,CAAC,EAAE,CAAC,CAAA;KACjE;IAED,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;AAC5D,CAAC,CAAA;AAZY,QAAA,gBAAgB,oBAY5B;AAEM,MAAM,eAAe,GAAG,CAAC,OAAuB,EAAE,EAAE,CAAC,CAC3D,IAAA,2BAAmB,EAClB,eAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CACtC,CACD,CAAA;AAJY,QAAA,eAAe,mBAI3B;AAEM,MAAM,sBAAsB,GAAG,GAAW,EAAE;IAClD,OAAO,WAAW,CAAC,IAAI,CAAC,IAAA,oBAAW,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA;AACnD,CAAC,CAAA;AAFY,QAAA,sBAAsB,0BAElC;AAEM,MAAM,eAAe,GAAG,CAAC,CAAS,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE;IACnD,IAAI,CAAC,GAAG,CAAC,CAAA;IACT,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IAC3B,KAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QAC/B,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA;QACd,CAAC,MAAM,CAAC,CAAA;KACR;IAED,OAAO,CAAC,CAAA;AACT,CAAC,CAAA;AATY,QAAA,eAAe,mBAS3B;AAEM,MAAM,QAAQ,GAAG,CAAC,CAAmC,EAAU,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAE,CAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;AAAlJ,QAAA,QAAQ,YAA0I;AAE/J,0CAA0C;AACnC,MAAM,oBAAoB,GAAG,CAAC,OAAa,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAA;AAArF,QAAA,oBAAoB,wBAAiE;AAI3F,MAAM,gBAAgB,GAAG,CAAC,UAAU,GAAG,IAAI,EAAE,IAAiB,EAAE,EAAE;IACxE,IAAI,OAAmC,CAAA;IACvC,OAAO;QACN,KAAK,EAAE,CAAC,aAAsB,EAAE,OAAoB,EAAE,EAAE;YACvD,IAAI,GAAG,OAAO,IAAI,IAAI,CAAA;YACtB,UAAU,GAAG,aAAa,IAAI,UAAU,CAAA;YACxC,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,CAAA;YAChC,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,EAAI,EAAE,UAAU,CAAC,CAAA;QACjD,CAAC;QACD,MAAM,EAAE,GAAG,EAAE;YACZ,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,CAAA;YAChC,OAAO,GAAG,SAAS,CAAA;QACpB,CAAC;QACD,OAAO,EAAE,CAAC,OAAmB,EAAE,EAAE,CAAC,IAAI,GAAG,OAAO;QAChD,WAAW,EAAE,CAAC,WAAmB,EAAE,EAAE,CAAC,UAAU,GAAG,WAAW;KAC9D,CAAA;AACF,CAAC,CAAA;AAhBY,QAAA,gBAAgB,oBAgB5B;AAEM,MAAM,KAAK,GAAG,CAAC,EAAU,EAAE,EAAE,CAAC,IAAA,wBAAgB,EAAE,EAAE,CAAC,CAAC,KAAK,CAAA;AAAnD,QAAA,KAAK,SAA8C;AAEzD,MAAM,gBAAgB,GAAG,CAAC,EAAU,EAAE,EAAE;IAC9C,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAA;IAC/B,IAAI,OAAuB,CAAA;IAC3B,IAAI,MAAuB,CAAA;IAC3B,MAAM,KAAK,GAAkB,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;QAC7D,OAAO,GAAG,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;QACjC,MAAM,GAAG,OAAO,CAAA;IACjB,CAAC,CAAC,CAAA;IACF,MAAM,MAAM,GAAG,GAAG,EAAE;QACnB,YAAY,CAAE,OAAO,CAAC,CAAA;QACtB,MAAM,CACL,IAAI,WAAI,CAAC,WAAW,EAAE;YACrB,UAAU,EAAE,GAAG;YACf,IAAI,EAAE;gBACL,KAAK;aACL;SACD,CAAC,CACF,CAAA;IACF,CAAC,CAAA;IAED,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAA;AACzB,CAAC,CAAA;AArBY,QAAA,gBAAgB,oBAqB5B;AAED,SAAsB,cAAc,CAAI,EAAsB,EAAE,OAAmE;;QAClI,IAAG,CAAC,EAAE,EAAE;YACP,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAA;SAC3B;QAED,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAA;QAC/B,qDAAqD;QACrD,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAA,wBAAgB,EAAE,EAAE,CAAC,CAAA;QAC/C,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACzC,KAAK;iBACH,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CACjB,IAAI,WAAI,CAAC,WAAW,EAAE;gBACrB,UAAU,EAAE,wBAAgB,CAAC,QAAQ;gBACrC,IAAI,EAAE;oBACL,KAAK;iBACL;aACD,CAAC,CACF,CAAC;iBACD,KAAK,CAAE,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;YAE5B,OAAO,CAAE,OAAO,EAAE,MAAM,CAAC,CAAA;QAC1B,CAAC,CAAC;aACA,OAAO,CAAE,MAAM,CAAC,CAAA;QAClB,OAAO,CAAe,CAAA;IACvB,CAAC;CAAA;AAxBD,wCAwBC;AAED,8CAA8C;AACvC,MAAM,iBAAiB,GAAG,GAAG,EAAE,CAAC,MAAM,GAAG,IAAA,oBAAW,EAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAA;AAA/E,QAAA,iBAAiB,qBAA8D;AAE5F,SAAgB,gBAAgB,CAAkC,EAAuB,EAAE,KAAQ;IAClG,OAAO,CAAM,KAAqD,EAAE,SAAkB,EAAE,EAAE;QACzF,IAAI,QAA4C,CAAA;QAChD,IAAI,aAAkB,CAAA;QACtB,MAAM,CACL,cAAc,CACb,SAAS,EACT,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnB,aAAa,GAAG,CAAC,EAAE,UAAU,EAAE,cAAc,EAAE,EAAE,EAAE;gBAClD,IAAG,UAAU,KAAK,OAAO,EAAE;oBAC1B,MAAM,CACL,CAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,KAAK;2BAClB,IAAI,WAAI,CAAC,mBAAmB,EAAE,EAAE,UAAU,EAAE,wBAAgB,CAAC,gBAAgB,EAAE,CAAC,CACnF,CAAA;iBACD;YACF,CAAC,CAAA;YAED,EAAE,CAAC,EAAE,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAA;YACzC,QAAQ,GAAG,CAAC,MAAM,EAAE,EAAE;gBACrB,IAAG,KAAK,CAAC,MAAM,CAAC,EAAE;oBACjB,OAAO,EAAE,CAAA;iBACT;YACF,CAAC,CAAA;YAED,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QACvB,CAAC,CACD;aACC,OAAO,CAAC,GAAG,EAAE;YACb,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;YACvB,EAAE,CAAC,GAAG,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAA;QAC3C,CAAC,CAAC,CACH,CAAA;IACF,CAAC,CAAA,CAAA;AACF,CAAC;AAjCD,4CAiCC;AAEM,MAAM,2BAA2B,GAAG,CAAC,EAAuB,EAAE,EAAE,CAAC,gBAAgB,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAA;AAApG,QAAA,2BAA2B,+BAAyE;AAE1G,MAAM,0BAA0B,GAAG,CAAC,EAAuB,EAAE,MAAc,EAAE,EAAE;IACrF,EAAE,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAM,EAAE,EAAE,EAAE,EAAE,EAAE;QAC1C,IAAG,EAAE,EAAE;YACN,MAAM,EAAE,GAAG,MAAM,MAAM,CAAC,iBAAiB,CAAC;iBACxC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC;iBACzB,KAAK,CAAC,GAAG,EAAE;gBACX,MAAM,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAA;YACzD,CAAC,CAAC,CAAA;YACH,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAA;SACjC;IACF,CAAC,CAAA,CAAC,CAAA;AACH,CAAC,CAAA;AAXY,QAAA,0BAA0B,8BAWtC;AAED;;;GAGG;AACI,MAAM,yBAAyB,GAAG,CAAM,UAAmC,EAAG,EAAE,EAAE;IACxF,MAAM,GAAG,GAAG,mGAAmG,CAAA;IAC/G,IAAI;QACH,MAAM,MAAM,GAAG,MAAM,eAAK,CAAC,GAAG,CAC7B,GAAG,kCAEC,OAAO,KACV,YAAY,EAAE,MAAM,IAErB,CAAA;QACD,OAAO;YACN,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO;YAC5B,QAAQ,EAAE,IAAI;SACd,CAAA;KACD;IAAC,OAAM,KAAK,EAAE;QACd,OAAO;YACN,OAAO,EAAE,8BAA2B;YACpC,QAAQ,EAAE,KAAK;YACf,KAAK;SACL,CAAA;KACD;AACF,CAAC,CAAA,CAAA;AArBY,QAAA,yBAAyB,6BAqBrC;AAED;;;GAGG;AACI,MAAM,uBAAuB,GAAG,CAAM,OAAgC,EAAE,EAAE;IAChF,IAAI;QACH,MAAM,MAAM,GAAG,MAAM,eAAK,CAAC,GAAG,CAC7B,8DAA8D,kCAE1D,OAAO,KACV,YAAY,EAAE,MAAM,IAErB,CAAA;QACD,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACrD,OAAO;YACN,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAc;YAC7D,QAAQ,EAAE,IAAI;SACd,CAAA;KACD;IAAC,OAAM,KAAK,EAAE;QACd,OAAO;YACN,OAAO,EAAE,8BAA2B;YACpC,QAAQ,EAAE,KAAK;YACf,KAAK;SACL,CAAA;KACD;AACF,CAAC,CAAA,CAAA;AArBY,QAAA,uBAAuB,2BAqBnC;AAED,+CAA+C;AACxC,MAAM,mBAAmB,GAAG,GAAG,EAAE;IACvC,MAAM,KAAK,GAAG,IAAA,oBAAW,EAAC,CAAC,CAAC,CAAA;IAC5B,OAAO,GAAG,KAAK,CAAC,YAAY,EAAE,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAA;AAC3D,CAAC,CAAA;AAHY,QAAA,mBAAmB,uBAG/B;AAED,MAAM,UAAU,GAAiD;IAChE,QAAQ,EAAE,eAAK,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM;IAC5C,MAAM,EAAE,eAAK,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI;IACxC,WAAW,EAAE,eAAK,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI;CAC7C,CAAA;AACD;;;GAGG;AACI,MAAM,wBAAwB,GAAG,CAAC,IAAwB,EAAE,EAAE;IACpE,MAAM,MAAM,GAAG,UAAU,CAAC,IAAK,CAAC,CAAA;IAChC,IAAG,OAAO,IAAI,KAAK,WAAW,EAAE;QAC/B,OAAO,eAAK,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAA;KAC/C;IAED,OAAO,MAAM,CAAA;AACd,CAAC,CAAA;AAPY,QAAA,wBAAwB,4BAOpC;AAED,MAAM,QAAQ,GAAsC;IACnD,QAAQ,EAAE,wBAAgB,CAAC,kBAAkB;CAC7C,CAAA;AAED;;;GAGG;AACI,MAAM,2BAA2B,GAAG,CAAC,IAAgB,EAAE,EAAE;IAC/D,MAAM,CAAC,UAAU,CAAC,GAAG,IAAA,mCAAwB,EAAC,IAAI,CAAC,CAAA;IACnD,IAAI,MAAM,GAAG,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,GAAG,KAAI,SAAS,CAAA;IACzC,MAAM,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,wBAAgB,CAAC,UAAU,CAAC,CAAA;IAExF,IAAG,UAAU,KAAK,wBAAgB,CAAC,eAAe,EAAE;QACnD,MAAM,GAAG,kBAAkB,CAAA;KAC3B;IAED,OAAO;QACN,MAAM;QACN,UAAU;KACV,CAAA;AACF,CAAC,CAAA;AAbY,QAAA,2BAA2B,+BAavC;AAEM,MAAM,qBAAqB,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAc,EAAE,EAAE;IACnE,IAAI,MAAwB,CAAA;IAC5B,QAAQ,GAAG,EAAE;QACb,KAAK,OAAO,CAAC;QACb,KAAK,cAAc;YAClB,MAAM,GAAG,OAAO,CAAA;YAChB,MAAK;QACN,KAAK,WAAW;YACf,IAAG,KAAK,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC9B,MAAM,GAAG,SAAS,CAAA;aAClB;iBAAM;gBACN,MAAM,GAAG,QAAQ,CAAA;aACjB;YAED,MAAK;QACN,KAAK,QAAQ;YACZ,MAAM,GAAG,QAAQ,CAAA;YACjB,MAAK;QACN,KAAK,QAAQ;YACZ,MAAM,GAAG,QAAQ,CAAA;YACjB,MAAK;QACN;YACC,MAAM,GAAG,SAAS,CAAA;YAClB,MAAK;KACL;IAED,OAAO,MAAM,CAAA;AACd,CAAC,CAAA;AA3BY,QAAA,qBAAqB,yBA2BjC;AAED,MAAM,2BAA2B,GAAG,8BAA8B,CAAA;AAE3D,MAAM,kBAAkB,GAAG,CAAC,KAAY,EAAE,EAAE;;IAClD,IAAI,UAAU,GAAG,GAAG,CAAA;IACpB,IAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,QAAQ,CAAC,2BAA2B,CAAC,EAAE;QACzD,MAAM,IAAI,GAAG,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAA,CAAA;QACtE,IAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,EAAE;YACtC,UAAU,GAAG,IAAI,CAAA;SACjB;KACD;SAAM,IACN,CAAA,MAAC,KAAa,aAAb,KAAK,uBAAL,KAAK,CAAU,IAAI,0CAAE,UAAU,CAAC,GAAG,CAAC;YAClC,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,QAAQ,CAAC,WAAW,CAAC,CAAA,EACvC,EAAE,iCAAiC;QACpC,UAAU,GAAG,GAAG,CAAA;KAChB;IAED,OAAO,UAAU,CAAA;AAClB,CAAC,CAAA;AAfY,QAAA,kBAAkB,sBAe9B;AAED;;;GAGG;AACI,MAAM,oBAAoB,GAAG,CAAC,QAAgB,EAAE,EAAE;IACxD,OAAO,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,MAAM,CAAA;AAClD,CAAC,CAAA;AAFY,QAAA,oBAAoB,wBAEhC;AAED,SAAgB,aAAa,CAAC,GAAQ;IACrC,KAAI,MAAM,GAAG,IAAI,GAAG,EAAE;QACrB,IAAG,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE;YACnC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAA;SACf;KACD;IAED,OAAO,GAAG,CAAA;AACX,CAAC;AARD,sCAQC;AAED,MAAM,oBAAoB,GAAG,kCAAkC,CAAA;AAE/D,SAAgB,gBAAgB,CAAC,MAAc;IAC9C,IAAI,KAAK,GAAG,CAAC,CAAA;IACb,IAAI,QAAQ,GAAG,CAAC,CAAA;IAChB,MAAM,SAAS,GAAa,EAAE,CAAA;IAE9B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAA;QACzC,QAAQ,IAAI,CAAC,CAAA;QAEb,OAAM,QAAQ,IAAI,CAAC,EAAE;YACpB,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;YAC5E,QAAQ,IAAI,CAAC,CAAA;SACb;KACD;IAED,IAAG,QAAQ,GAAG,CAAC,EAAE;QAChB,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;KAC3E;IAED,OAAO,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;AAC1B,CAAC;AApBD,4CAoBC","sourcesContent":["import { Boom } from '@hapi/boom'\nimport axios, { AxiosRequestConfig } from 'axios'\nimport { randomBytes } from 'crypto'\nimport { platform, release } from 'os'\nimport { Logger } from 'pino'\nimport { proto } from '../../WAProto'\nimport { version as baileysVersion } from '../Defaults/baileys-version.json'\nimport { BaileysEventEmitter, BaileysEventMap, DisconnectReason, WACallUpdateType, WAVersion } from '../Types'\nimport { BinaryNode, getAllBinaryNodeChildren } from '../WABinary'\n\nconst PLATFORM_MAP = {\n\t'aix': 'AIX',\n\t'darwin': 'Mac OS',\n\t'win32': 'Windows',\n\t'android': 'Android'\n}\n\nexport const Browsers = {\n\tubuntu: browser => ['Ubuntu', browser, '20.0.04'] as [string, string, string],\n\tmacOS: browser => ['Mac OS', browser, '10.15.7'] as [string, string, string],\n\tbaileys: browser => ['Baileys', browser, '4.0.0'] as [string, string, string],\n\t/** https://github.com/WhiskeySockets/Baileys/pull/303  */\n\twindows: browser => ['Windows', browser, '10.0.22621'] as [string, string, string],\n\t/** The appropriate browser based on your OS & release */\n\tappropriate: browser => [ PLATFORM_MAP[platform()] || 'Ubuntu', browser, release() ] as [string, string, string]\n}\n\nexport const BufferJSON = {\n\treplacer: (k, value: any) => {\n\t\tif(Buffer.isBuffer(value) || value instanceof Uint8Array || value?.type === 'Buffer') {\n\t\t\treturn { type: 'Buffer', data: Buffer.from(value?.data || value).toString('base64') }\n\t\t}\n\n\t\treturn value\n\t},\n\treviver: (_, value: any) => {\n\t\tif(typeof value === 'object' && !!value && (value.buffer === true || value.type === 'Buffer')) {\n\t\t\tconst val = value.data || value.value\n\t\t\treturn typeof val === 'string' ? Buffer.from(val, 'base64') : Buffer.from(val || [])\n\t\t}\n\n\t\treturn value\n\t}\n}\n\nexport const getKeyAuthor = (\n\tkey: proto.IMessageKey | undefined | null,\n\tmeId = 'me'\n) => (\n\t(key?.fromMe ? meId : key?.participant || key?.remoteJid) || ''\n)\n\nexport const writeRandomPadMax16 = (msg: Uint8Array) => {\n\tconst pad = randomBytes(1)\n\tpad[0] &= 0xf\n\tif(!pad[0]) {\n\t\tpad[0] = 0xf\n\t}\n\n\treturn Buffer.concat([msg, Buffer.alloc(pad[0], pad[0])])\n}\n\nexport const unpadRandomMax16 = (e: Uint8Array | Buffer) => {\n\tconst t = new Uint8Array(e)\n\tif(0 === t.length) {\n\t\tthrow new Error('unpadPkcs7 given empty bytes')\n\t}\n\n\tvar r = t[t.length - 1]\n\tif(r > t.length) {\n\t\tthrow new Error(`unpad given ${t.length} bytes, but pad is ${r}`)\n\t}\n\n\treturn new Uint8Array(t.buffer, t.byteOffset, t.length - r)\n}\n\nexport const encodeWAMessage = (message: proto.IMessage) => (\n\twriteRandomPadMax16(\n\t\tproto.Message.encode(message).finish()\n\t)\n)\n\nexport const generateRegistrationId = (): number => {\n\treturn Uint16Array.from(randomBytes(2))[0] & 16383\n}\n\nexport const encodeBigEndian = (e: number, t = 4) => {\n\tlet r = e\n\tconst a = new Uint8Array(t)\n\tfor(let i = t - 1; i >= 0; i--) {\n\t\ta[i] = 255 & r\n\t\tr >>>= 8\n\t}\n\n\treturn a\n}\n\nexport const toNumber = (t: Long | number | null | undefined): number => ((typeof t === 'object' && t) ? ('toNumber' in t ? t.toNumber() : (t as any).low) : t)\n\n/** unix timestamp of a date in seconds */\nexport const unixTimestampSeconds = (date: Date = new Date()) => Math.floor(date.getTime() / 1000)\n\nexport type DebouncedTimeout = ReturnType<typeof debouncedTimeout>\n\nexport const debouncedTimeout = (intervalMs = 1000, task?: () => void) => {\n\tlet timeout: NodeJS.Timeout | undefined\n\treturn {\n\t\tstart: (newIntervalMs?: number, newTask?: () => void) => {\n\t\t\ttask = newTask || task\n\t\t\tintervalMs = newIntervalMs || intervalMs\n\t\t\ttimeout && clearTimeout(timeout)\n\t\t\ttimeout = setTimeout(() => task?.(), intervalMs)\n\t\t},\n\t\tcancel: () => {\n\t\t\ttimeout && clearTimeout(timeout)\n\t\t\ttimeout = undefined\n\t\t},\n\t\tsetTask: (newTask: () => void) => task = newTask,\n\t\tsetInterval: (newInterval: number) => intervalMs = newInterval\n\t}\n}\n\nexport const delay = (ms: number) => delayCancellable (ms).delay\n\nexport const delayCancellable = (ms: number) => {\n\tconst stack = new Error().stack\n\tlet timeout: NodeJS.Timeout\n\tlet reject: (error) => void\n\tconst delay: Promise<void> = new Promise((resolve, _reject) => {\n\t\ttimeout = setTimeout(resolve, ms)\n\t\treject = _reject\n\t})\n\tconst cancel = () => {\n\t\tclearTimeout (timeout)\n\t\treject(\n\t\t\tnew Boom('Cancelled', {\n\t\t\t\tstatusCode: 500,\n\t\t\t\tdata: {\n\t\t\t\t\tstack\n\t\t\t\t}\n\t\t\t})\n\t\t)\n\t}\n\n\treturn { delay, cancel }\n}\n\nexport async function promiseTimeout<T>(ms: number | undefined, promise: (resolve: (v: T) => void, reject: (error) => void) => void) {\n\tif(!ms) {\n\t\treturn new Promise(promise)\n\t}\n\n\tconst stack = new Error().stack\n\t// Create a promise that rejects in <ms> milliseconds\n\tconst { delay, cancel } = delayCancellable (ms)\n\tconst p = new Promise((resolve, reject) => {\n\t\tdelay\n\t\t\t.then(() => reject(\n\t\t\t\tnew Boom('Timed Out', {\n\t\t\t\t\tstatusCode: DisconnectReason.timedOut,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tstack\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t))\n\t\t\t.catch (err => reject(err))\n\n\t\tpromise (resolve, reject)\n\t})\n\t\t.finally (cancel)\n\treturn p as Promise<T>\n}\n\n// generate a random ID to attach to a message\nexport const generateMessageID = () => 'BAE5' + randomBytes(6).toString('hex').toUpperCase()\n\nexport function bindWaitForEvent<T extends keyof BaileysEventMap>(ev: BaileysEventEmitter, event: T) {\n\treturn async(check: (u: BaileysEventMap[T]) => boolean | undefined, timeoutMs?: number) => {\n\t\tlet listener: (item: BaileysEventMap[T]) => void\n\t\tlet closeListener: any\n\t\tawait (\n\t\t\tpromiseTimeout<void>(\n\t\t\t\ttimeoutMs,\n\t\t\t\t(resolve, reject) => {\n\t\t\t\t\tcloseListener = ({ connection, lastDisconnect }) => {\n\t\t\t\t\t\tif(connection === 'close') {\n\t\t\t\t\t\t\treject(\n\t\t\t\t\t\t\t\tlastDisconnect?.error\n\t\t\t\t\t\t\t\t|| new Boom('Connection Closed', { statusCode: DisconnectReason.connectionClosed })\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tev.on('connection.update', closeListener)\n\t\t\t\t\tlistener = (update) => {\n\t\t\t\t\t\tif(check(update)) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tev.on(event, listener)\n\t\t\t\t}\n\t\t\t)\n\t\t\t\t.finally(() => {\n\t\t\t\t\tev.off(event, listener)\n\t\t\t\t\tev.off('connection.update', closeListener)\n\t\t\t\t})\n\t\t)\n\t}\n}\n\nexport const bindWaitForConnectionUpdate = (ev: BaileysEventEmitter) => bindWaitForEvent(ev, 'connection.update')\n\nexport const printQRIfNecessaryListener = (ev: BaileysEventEmitter, logger: Logger) => {\n\tev.on('connection.update', async({ qr }) => {\n\t\tif(qr) {\n\t\t\tconst QR = await import('qrcode-terminal')\n\t\t\t\t.then(m => m.default || m)\n\t\t\t\t.catch(() => {\n\t\t\t\t\tlogger.error('QR code terminal not added as dependency')\n\t\t\t\t})\n\t\t\tQR?.generate(qr, { small: true })\n\t\t}\n\t})\n}\n\n/**\n * utility that fetches latest baileys version from the master branch.\n * Use to ensure your WA connection is always on the latest version\n */\nexport const fetchLatestBaileysVersion = async(options: AxiosRequestConfig<any> = { }) => {\n\tconst URL = 'https://raw.githubusercontent.com/WhiskeySockets/Baileys/master/src/Defaults/baileys-version.json'\n\ttry {\n\t\tconst result = await axios.get<{ version: WAVersion }>(\n\t\t\tURL,\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tresponseType: 'json'\n\t\t\t}\n\t\t)\n\t\treturn {\n\t\t\tversion: result.data.version,\n\t\t\tisLatest: true\n\t\t}\n\t} catch(error) {\n\t\treturn {\n\t\t\tversion: baileysVersion as WAVersion,\n\t\t\tisLatest: false,\n\t\t\terror\n\t\t}\n\t}\n}\n\n/**\n * A utility that fetches the latest web version of whatsapp.\n * Use to ensure your WA connection is always on the latest version\n */\nexport const fetchLatestWaWebVersion = async(options: AxiosRequestConfig<any>) => {\n\ttry {\n\t\tconst result = await axios.get(\n\t\t\t'https://web.whatsapp.com/check-update?version=1&platform=web',\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tresponseType: 'json'\n\t\t\t}\n\t\t)\n\t\tconst version = result.data.currentVersion.split('.')\n\t\treturn {\n\t\t\tversion: [+version[0], +version[1], +version[2]] as WAVersion,\n\t\t\tisLatest: true\n\t\t}\n\t} catch(error) {\n\t\treturn {\n\t\t\tversion: baileysVersion as WAVersion,\n\t\t\tisLatest: false,\n\t\t\terror\n\t\t}\n\t}\n}\n\n/** unique message tag prefix for MD clients */\nexport const generateMdTagPrefix = () => {\n\tconst bytes = randomBytes(4)\n\treturn `${bytes.readUInt16BE()}.${bytes.readUInt16BE(2)}-`\n}\n\nconst STATUS_MAP: { [_: string]: proto.WebMessageInfo.Status } = {\n\t'played': proto.WebMessageInfo.Status.PLAYED,\n\t'read': proto.WebMessageInfo.Status.READ,\n\t'read-self': proto.WebMessageInfo.Status.READ\n}\n/**\n * Given a type of receipt, returns what the new status of the message should be\n * @param type type from receipt\n */\nexport const getStatusFromReceiptType = (type: string | undefined) => {\n\tconst status = STATUS_MAP[type!]\n\tif(typeof type === 'undefined') {\n\t\treturn proto.WebMessageInfo.Status.DELIVERY_ACK\n\t}\n\n\treturn status\n}\n\nconst CODE_MAP: { [_: string]: DisconnectReason } = {\n\tconflict: DisconnectReason.connectionReplaced\n}\n\n/**\n * Stream errors generally provide a reason, map that to a baileys DisconnectReason\n * @param reason the string reason given, eg. \"conflict\"\n */\nexport const getErrorCodeFromStreamError = (node: BinaryNode) => {\n\tconst [reasonNode] = getAllBinaryNodeChildren(node)\n\tlet reason = reasonNode?.tag || 'unknown'\n\tconst statusCode = +(node.attrs.code || CODE_MAP[reason] || DisconnectReason.badSession)\n\n\tif(statusCode === DisconnectReason.restartRequired) {\n\t\treason = 'restart required'\n\t}\n\n\treturn {\n\t\treason,\n\t\tstatusCode\n\t}\n}\n\nexport const getCallStatusFromNode = ({ tag, attrs }: BinaryNode) => {\n\tlet status: WACallUpdateType\n\tswitch (tag) {\n\tcase 'offer':\n\tcase 'offer_notice':\n\t\tstatus = 'offer'\n\t\tbreak\n\tcase 'terminate':\n\t\tif(attrs.reason === 'timeout') {\n\t\t\tstatus = 'timeout'\n\t\t} else {\n\t\t\tstatus = 'reject'\n\t\t}\n\n\t\tbreak\n\tcase 'reject':\n\t\tstatus = 'reject'\n\t\tbreak\n\tcase 'accept':\n\t\tstatus = 'accept'\n\t\tbreak\n\tdefault:\n\t\tstatus = 'ringing'\n\t\tbreak\n\t}\n\n\treturn status\n}\n\nconst UNEXPECTED_SERVER_CODE_TEXT = 'Unexpected server response: '\n\nexport const getCodeFromWSError = (error: Error) => {\n\tlet statusCode = 500\n\tif(error?.message?.includes(UNEXPECTED_SERVER_CODE_TEXT)) {\n\t\tconst code = +error?.message.slice(UNEXPECTED_SERVER_CODE_TEXT.length)\n\t\tif(!Number.isNaN(code) && code >= 400) {\n\t\t\tstatusCode = code\n\t\t}\n\t} else if(\n\t\t(error as any)?.code?.startsWith('E')\n\t\t|| error?.message?.includes('timed out')\n\t) { // handle ETIMEOUT, ENOTFOUND etc\n\t\tstatusCode = 408\n\t}\n\n\treturn statusCode\n}\n\n/**\n * Is the given platform WA business\n * @param platform AuthenticationCreds.platform\n */\nexport const isWABusinessPlatform = (platform: string) => {\n\treturn platform === 'smbi' || platform === 'smba'\n}\n\nexport function trimUndefined(obj: any) {\n\tfor(const key in obj) {\n\t\tif(typeof obj[key] === 'undefined') {\n\t\t\tdelete obj[key]\n\t\t}\n\t}\n\n\treturn obj\n}\n\nconst CROCKFORD_CHARACTERS = '123456789ABCDEFGHJKLMNPQRSTVWXYZ'\n\nexport function bytesToCrockford(buffer: Buffer): string {\n\tlet value = 0\n\tlet bitCount = 0\n\tconst crockford: string[] = []\n\n\tfor(let i = 0; i < buffer.length; i++) {\n\t\tvalue = (value << 8) | (buffer[i] & 0xff)\n\t\tbitCount += 8\n\n\t\twhile(bitCount >= 5) {\n\t\t\tcrockford.push(CROCKFORD_CHARACTERS.charAt((value >>> (bitCount - 5)) & 31))\n\t\t\tbitCount -= 5\n\t\t}\n\t}\n\n\tif(bitCount > 0) {\n\t\tcrockford.push(CROCKFORD_CHARACTERS.charAt((value << (5 - bitCount)) & 31))\n\t}\n\n\treturn crockford.join('')\n}"]}