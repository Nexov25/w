{"version":3,"file":"chat-utils.js","sourceRoot":"/","sources":["Utils/chat-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Boom } from '@hapi/boom'\nimport { AxiosRequestConfig } from 'axios'\nimport type { Logger } from 'pino'\nimport { proto } from '../../WAProto'\nimport { BaileysEventEmitter, Chat, ChatModification, ChatMutation, ChatUpdate, Contact, InitialAppStateSyncOptions, LastMessageList, LTHashState, WAPatchCreate, WAPatchName } from '../Types'\nimport { ChatLabelAssociation, LabelAssociationType, MessageLabelAssociation } from '../Types/LabelAssociation'\nimport { BinaryNode, getBinaryNodeChild, getBinaryNodeChildren, isJidGroup, jidNormalizedUser } from '../WABinary'\nimport { aesDecrypt, aesEncrypt, hkdf, hmacSign } from './crypto'\nimport { toNumber } from './generics'\nimport { LT_HASH_ANTI_TAMPERING } from './lt-hash'\nimport { downloadContentFromMessage, } from './messages-media'\n\ntype FetchAppStateSyncKey = (keyId: string) => Promise<proto.Message.IAppStateSyncKeyData | null | undefined>\n\nexport type ChatMutationMap = { [index: string]: ChatMutation }\n\nconst mutationKeys = (keydata: Uint8Array) => {\n\tconst expanded = hkdf(keydata, 160, { info: 'WhatsApp Mutation Keys' })\n\treturn {\n\t\tindexKey: expanded.slice(0, 32),\n\t\tvalueEncryptionKey: expanded.slice(32, 64),\n\t\tvalueMacKey: expanded.slice(64, 96),\n\t\tsnapshotMacKey: expanded.slice(96, 128),\n\t\tpatchMacKey: expanded.slice(128, 160)\n\t}\n}\n\nconst generateMac = (operation: proto.SyncdMutation.SyncdOperation, data: Buffer, keyId: Uint8Array | string, key: Buffer) => {\n\tconst getKeyData = () => {\n\t\tlet r: number\n\t\tswitch (operation) {\n\t\tcase proto.SyncdMutation.SyncdOperation.SET:\n\t\t\tr = 0x01\n\t\t\tbreak\n\t\tcase proto.SyncdMutation.SyncdOperation.REMOVE:\n\t\t\tr = 0x02\n\t\t\tbreak\n\t\t}\n\n\t\tconst buff = Buffer.from([r])\n\t\treturn Buffer.concat([buff, Buffer.from(keyId as any, 'base64')])\n\t}\n\n\tconst keyData = getKeyData()\n\n\tconst last = Buffer.alloc(8) // 8 bytes\n\tlast.set([keyData.length], last.length - 1)\n\n\tconst total = Buffer.concat([keyData, data, last])\n\tconst hmac = hmacSign(total, key, 'sha512')\n\n\treturn hmac.slice(0, 32)\n}\n\nconst to64BitNetworkOrder = (e: number) => {\n\tconst buff = Buffer.alloc(8)\n\tbuff.writeUint32BE(e, 4)\n\treturn buff\n}\n\ntype Mac = { indexMac: Uint8Array, valueMac: Uint8Array, operation: proto.SyncdMutation.SyncdOperation }\n\nconst makeLtHashGenerator = ({ indexValueMap, hash }: Pick<LTHashState, 'hash' | 'indexValueMap'>) => {\n\tindexValueMap = { ...indexValueMap }\n\tconst addBuffs: ArrayBuffer[] = []\n\tconst subBuffs: ArrayBuffer[] = []\n\n\treturn {\n\t\tmix: ({ indexMac, valueMac, operation }: Mac) => {\n\t\t\tconst indexMacBase64 = Buffer.from(indexMac).toString('base64')\n\t\t\tconst prevOp = indexValueMap[indexMacBase64]\n\t\t\tif(operation === proto.SyncdMutation.SyncdOperation.REMOVE) {\n\t\t\t\tif(!prevOp) {\n\t\t\t\t\tthrow new Boom('tried remove, but no previous op', { data: { indexMac, valueMac } })\n\t\t\t\t}\n\n\t\t\t\t// remove from index value mac, since this mutation is erased\n\t\t\t\tdelete indexValueMap[indexMacBase64]\n\t\t\t} else {\n\t\t\t\taddBuffs.push(new Uint8Array(valueMac).buffer)\n\t\t\t\t// add this index into the history map\n\t\t\t\tindexValueMap[indexMacBase64] = { valueMac }\n\t\t\t}\n\n\t\t\tif(prevOp) {\n\t\t\t\tsubBuffs.push(new Uint8Array(prevOp.valueMac).buffer)\n\t\t\t}\n\t\t},\n\t\tfinish: () => {\n\t\t\tconst hashArrayBuffer = new Uint8Array(hash).buffer\n\t\t\tconst result = LT_HASH_ANTI_TAMPERING.subtractThenAdd(hashArrayBuffer, addBuffs, subBuffs)\n\t\t\tconst buffer = Buffer.from(result)\n\n\t\t\treturn {\n\t\t\t\thash: buffer,\n\t\t\t\tindexValueMap\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst generateSnapshotMac = (lthash: Uint8Array, version: number, name: WAPatchName, key: Buffer) => {\n\tconst total = Buffer.concat([\n\t\tlthash,\n\t\tto64BitNetworkOrder(version),\n\t\tBuffer.from(name, 'utf-8')\n\t])\n\treturn hmacSign(total, key, 'sha256')\n}\n\nconst generatePatchMac = (snapshotMac: Uint8Array, valueMacs: Uint8Array[], version: number, type: WAPatchName, key: Buffer) => {\n\tconst total = Buffer.concat([\n\t\tsnapshotMac,\n\t\t...valueMacs,\n\t\tto64BitNetworkOrder(version),\n\t\tBuffer.from(type, 'utf-8')\n\t])\n\treturn hmacSign(total, key)\n}\n\nexport const newLTHashState = (): LTHashState => ({ version: 0, hash: Buffer.alloc(128), indexValueMap: {} })\n\nexport const encodeSyncdPatch = async(\n\t{ type, index, syncAction, apiVersion, operation }: WAPatchCreate,\n\tmyAppStateKeyId: string,\n\tstate: LTHashState,\n\tgetAppStateSyncKey: FetchAppStateSyncKey\n) => {\n\tconst key = !!myAppStateKeyId ? await getAppStateSyncKey(myAppStateKeyId) : undefined\n\tif(!key) {\n\t\tthrow new Boom(`myAppStateKey (\"${myAppStateKeyId}\") not present`, { statusCode: 404 })\n\t}\n\n\tconst encKeyId = Buffer.from(myAppStateKeyId, 'base64')\n\n\tstate = { ...state, indexValueMap: { ...state.indexValueMap } }\n\n\tconst indexBuffer = Buffer.from(JSON.stringify(index))\n\tconst dataProto = proto.SyncActionData.fromObject({\n\t\tindex: indexBuffer,\n\t\tvalue: syncAction,\n\t\tpadding: new Uint8Array(0),\n\t\tversion: apiVersion\n\t})\n\tconst encoded = proto.SyncActionData.encode(dataProto).finish()\n\n\tconst keyValue = mutationKeys(key.keyData!)\n\n\tconst encValue = aesEncrypt(encoded, keyValue.valueEncryptionKey)\n\tconst valueMac = generateMac(operation, encValue, encKeyId, keyValue.valueMacKey)\n\tconst indexMac = hmacSign(indexBuffer, keyValue.indexKey)\n\n\t// update LT hash\n\tconst generator = makeLtHashGenerator(state)\n\tgenerator.mix({ indexMac, valueMac, operation })\n\tObject.assign(state, generator.finish())\n\n\tstate.version += 1\n\n\tconst snapshotMac = generateSnapshotMac(state.hash, state.version, type, keyValue.snapshotMacKey)\n\n\tconst patch: proto.ISyncdPatch = {\n\t\tpatchMac: generatePatchMac(snapshotMac, [valueMac], state.version, type, keyValue.patchMacKey),\n\t\tsnapshotMac: snapshotMac,\n\t\tkeyId: { id: encKeyId },\n\t\tmutations: [\n\t\t\t{\n\t\t\t\toperation: operation,\n\t\t\t\trecord: {\n\t\t\t\t\tindex: {\n\t\t\t\t\t\tblob: indexMac\n\t\t\t\t\t},\n\t\t\t\t\tvalue: {\n\t\t\t\t\t\tblob: Buffer.concat([encValue, valueMac])\n\t\t\t\t\t},\n\t\t\t\t\tkeyId: { id: encKeyId }\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\n\tconst base64Index = indexMac.toString('base64')\n\tstate.indexValueMap[base64Index] = { valueMac }\n\n\treturn { patch, state }\n}\n\nexport const decodeSyncdMutations = async(\n\tmsgMutations: (proto.ISyncdMutation | proto.ISyncdRecord)[],\n\tinitialState: LTHashState,\n\tgetAppStateSyncKey: FetchAppStateSyncKey,\n\tonMutation: (mutation: ChatMutation) => void,\n\tvalidateMacs: boolean\n) => {\n\tconst ltGenerator = makeLtHashGenerator(initialState)\n\t// indexKey used to HMAC sign record.index.blob\n\t// valueEncryptionKey used to AES-256-CBC encrypt record.value.blob[0:-32]\n\t// the remaining record.value.blob[0:-32] is the mac, it the HMAC sign of key.keyId + decoded proto data + length of bytes in keyId\n\tfor(const msgMutation of msgMutations) {\n\t\t// if it's a syncdmutation, get the operation property\n\t\t// otherwise, if it's only a record -- it'll be a SET mutation\n\t\tconst operation = 'operation' in msgMutation ? msgMutation.operation : proto.SyncdMutation.SyncdOperation.SET\n\t\tconst record = ('record' in msgMutation && !!msgMutation.record) ? msgMutation.record : msgMutation as proto.ISyncdRecord\n\n\t\tconst key = await getKey(record.keyId!.id!)\n\t\tconst content = Buffer.from(record.value!.blob!)\n\t\tconst encContent = content.slice(0, -32)\n\t\tconst ogValueMac = content.slice(-32)\n\t\tif(validateMacs) {\n\t\t\tconst contentHmac = generateMac(operation!, encContent, record.keyId!.id!, key.valueMacKey)\n\t\t\tif(Buffer.compare(contentHmac, ogValueMac) !== 0) {\n\t\t\t\tthrow new Boom('HMAC content verification failed')\n\t\t\t}\n\t\t}\n\n\t\tconst result = aesDecrypt(encContent, key.valueEncryptionKey)\n\t\tconst syncAction = proto.SyncActionData.decode(result)\n\n\t\tif(validateMacs) {\n\t\t\tconst hmac = hmacSign(syncAction.index, key.indexKey)\n\t\t\tif(Buffer.compare(hmac, record.index!.blob!) !== 0) {\n\t\t\t\tthrow new Boom('HMAC index verification failed')\n\t\t\t}\n\t\t}\n\n\t\tconst indexStr = Buffer.from(syncAction.index).toString()\n\t\tonMutation({ syncAction, index: JSON.parse(indexStr) })\n\n\t\tltGenerator.mix({\n\t\t\tindexMac: record.index!.blob!,\n\t\t\tvalueMac: ogValueMac,\n\t\t\toperation: operation!\n\t\t})\n\t}\n\n\treturn ltGenerator.finish()\n\n\tasync function getKey(keyId: Uint8Array) {\n\t\tconst base64Key = Buffer.from(keyId).toString('base64')\n\t\tconst keyEnc = await getAppStateSyncKey(base64Key)\n\t\tif(!keyEnc) {\n\t\t\tthrow new Boom(`failed to find key \"${base64Key}\" to decode mutation`, { statusCode: 404, data: { msgMutations } })\n\t\t}\n\n\t\treturn mutationKeys(keyEnc.keyData!)\n\t}\n}\n\nexport const decodeSyncdPatch = async(\n\tmsg: proto.ISyncdPatch,\n\tname: WAPatchName,\n\tinitialState: LTHashState,\n\tgetAppStateSyncKey: FetchAppStateSyncKey,\n\tonMutation: (mutation: ChatMutation) => void,\n\tvalidateMacs: boolean\n) => {\n\tif(validateMacs) {\n\t\tconst base64Key = Buffer.from(msg.keyId!.id!).toString('base64')\n\t\tconst mainKeyObj = await getAppStateSyncKey(base64Key)\n\t\tif(!mainKeyObj) {\n\t\t\tthrow new Boom(`failed to find key \"${base64Key}\" to decode patch`, { statusCode: 404, data: { msg } })\n\t\t}\n\n\t\tconst mainKey = mutationKeys(mainKeyObj.keyData!)\n\t\tconst mutationmacs = msg.mutations!.map(mutation => mutation.record!.value!.blob!.slice(-32))\n\n\t\tconst patchMac = generatePatchMac(msg.snapshotMac!, mutationmacs, toNumber(msg.version!.version), name, mainKey.patchMacKey)\n\t\tif(Buffer.compare(patchMac, msg.patchMac!) !== 0) {\n\t\t\tthrow new Boom('Invalid patch mac')\n\t\t}\n\t}\n\n\tconst result = await decodeSyncdMutations(msg.mutations!, initialState, getAppStateSyncKey, onMutation, validateMacs)\n\treturn result\n}\n\nexport const extractSyncdPatches = async(\n\tresult: BinaryNode,\n\toptions: AxiosRequestConfig<any>\n) => {\n\tconst syncNode = getBinaryNodeChild(result, 'sync')\n\tconst collectionNodes = getBinaryNodeChildren(syncNode, 'collection')\n\n\tconst final = {} as { [T in WAPatchName]: { patches: proto.ISyncdPatch[], hasMorePatches: boolean, snapshot?: proto.ISyncdSnapshot } }\n\tawait Promise.all(\n\t\tcollectionNodes.map(\n\t\t\tasync collectionNode => {\n\t\t\t\tconst patchesNode = getBinaryNodeChild(collectionNode, 'patches')\n\n\t\t\t\tconst patches = getBinaryNodeChildren(patchesNode || collectionNode, 'patch')\n\t\t\t\tconst snapshotNode = getBinaryNodeChild(collectionNode, 'snapshot')\n\n\t\t\t\tconst syncds: proto.ISyncdPatch[] = []\n\t\t\t\tconst name = collectionNode.attrs.name as WAPatchName\n\n\t\t\t\tconst hasMorePatches = collectionNode.attrs.has_more_patches === 'true'\n\n\t\t\t\tlet snapshot: proto.ISyncdSnapshot | undefined = undefined\n\t\t\t\tif(snapshotNode && !!snapshotNode.content) {\n\t\t\t\t\tif(!Buffer.isBuffer(snapshotNode)) {\n\t\t\t\t\t\tsnapshotNode.content = Buffer.from(Object.values(snapshotNode.content))\n\t\t\t\t\t}\n\n\t\t\t\t\tconst blobRef = proto.ExternalBlobReference.decode(\n\t\t\t\t\t\tsnapshotNode.content as Buffer\n\t\t\t\t\t)\n\t\t\t\t\tconst data = await downloadExternalBlob(blobRef, options)\n\t\t\t\t\tsnapshot = proto.SyncdSnapshot.decode(data)\n\t\t\t\t}\n\n\t\t\t\tfor(let { content } of patches) {\n\t\t\t\t\tif(content) {\n\t\t\t\t\t\tif(!Buffer.isBuffer(content)) {\n\t\t\t\t\t\t\tcontent = Buffer.from(Object.values(content))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst syncd = proto.SyncdPatch.decode(content as Uint8Array)\n\t\t\t\t\t\tif(!syncd.version) {\n\t\t\t\t\t\t\tsyncd.version = { version: +collectionNode.attrs.version + 1 }\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsyncds.push(syncd)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfinal[name] = { patches: syncds, hasMorePatches, snapshot }\n\t\t\t}\n\t\t)\n\t)\n\n\treturn final\n}\n\n\nexport const downloadExternalBlob = async(\n\tblob: proto.IExternalBlobReference,\n\toptions: AxiosRequestConfig<any>\n) => {\n\tconst stream = await downloadContentFromMessage(blob, 'md-app-state', { options })\n\tconst bufferArray: Buffer[] = []\n\tfor await (const chunk of stream) {\n\t\tbufferArray.push(chunk)\n\t}\n\n\treturn Buffer.concat(bufferArray)\n}\n\nexport const downloadExternalPatch = async(\n\tblob: proto.IExternalBlobReference,\n\toptions: AxiosRequestConfig<any>\n) => {\n\tconst buffer = await downloadExternalBlob(blob, options)\n\tconst syncData = proto.SyncdMutations.decode(buffer)\n\treturn syncData\n}\n\nexport const decodeSyncdSnapshot = async(\n\tname: WAPatchName,\n\tsnapshot: proto.ISyncdSnapshot,\n\tgetAppStateSyncKey: FetchAppStateSyncKey,\n\tminimumVersionNumber: number | undefined,\n\tvalidateMacs = true\n) => {\n\tconst newState = newLTHashState()\n\tnewState.version = toNumber(snapshot.version!.version)\n\n\tconst mutationMap: ChatMutationMap = {}\n\tconst areMutationsRequired = typeof minimumVersionNumber === 'undefined'\n\t\t|| newState.version > minimumVersionNumber\n\n\tconst { hash, indexValueMap } = await decodeSyncdMutations(\n\t\tsnapshot.records!,\n\t\tnewState,\n\t\tgetAppStateSyncKey,\n\t\tareMutationsRequired\n\t\t\t? (mutation) => {\n\t\t\t\tconst index = mutation.syncAction.index?.toString()\n\t\t\t\tmutationMap[index!] = mutation\n\t\t\t}\n\t\t\t: () => { },\n\t\tvalidateMacs\n\t)\n\tnewState.hash = hash\n\tnewState.indexValueMap = indexValueMap\n\n\tif(validateMacs) {\n\t\tconst base64Key = Buffer.from(snapshot.keyId!.id!).toString('base64')\n\t\tconst keyEnc = await getAppStateSyncKey(base64Key)\n\t\tif(!keyEnc) {\n\t\t\tthrow new Boom(`failed to find key \"${base64Key}\" to decode mutation`)\n\t\t}\n\n\t\tconst result = mutationKeys(keyEnc.keyData!)\n\t\tconst computedSnapshotMac = generateSnapshotMac(newState.hash, newState.version, name, result.snapshotMacKey)\n\t\tif(Buffer.compare(snapshot.mac!, computedSnapshotMac) !== 0) {\n\t\t\tthrow new Boom(`failed to verify LTHash at ${newState.version} of ${name} from snapshot`)\n\t\t}\n\t}\n\n\treturn {\n\t\tstate: newState,\n\t\tmutationMap\n\t}\n}\n\nexport const decodePatches = async(\n\tname: WAPatchName,\n\tsyncds: proto.ISyncdPatch[],\n\tinitial: LTHashState,\n\tgetAppStateSyncKey: FetchAppStateSyncKey,\n\toptions: AxiosRequestConfig<any>,\n\tminimumVersionNumber?: number,\n\tlogger?: Logger,\n\tvalidateMacs = true\n) => {\n\tconst newState: LTHashState = {\n\t\t...initial,\n\t\tindexValueMap: { ...initial.indexValueMap }\n\t}\n\n\tconst mutationMap: ChatMutationMap = {}\n\n\tfor(let i = 0; i < syncds.length; i++) {\n\t\tconst syncd = syncds[i]\n\t\tconst { version, keyId, snapshotMac } = syncd\n\t\tif(syncd.externalMutations) {\n\t\t\tlogger?.trace({ name, version }, 'downloading external patch')\n\t\t\tconst ref = await downloadExternalPatch(syncd.externalMutations, options)\n\t\t\tlogger?.debug({ name, version, mutations: ref.mutations.length }, 'downloaded external patch')\n\t\t\tsyncd.mutations?.push(...ref.mutations)\n\t\t}\n\n\t\tconst patchVersion = toNumber(version!.version)\n\n\t\tnewState.version = patchVersion\n\t\tconst shouldMutate = typeof minimumVersionNumber === 'undefined' || patchVersion > minimumVersionNumber\n\n\t\tconst decodeResult = await decodeSyncdPatch(\n\t\t\tsyncd,\n\t\t\tname,\n\t\t\tnewState,\n\t\t\tgetAppStateSyncKey,\n\t\t\tshouldMutate\n\t\t\t\t? mutation => {\n\t\t\t\t\tconst index = mutation.syncAction.index?.toString()\n\t\t\t\t\tmutationMap[index!] = mutation\n\t\t\t\t}\n\t\t\t\t: (() => { }),\n\t\t\ttrue\n\t\t)\n\n\t\tnewState.hash = decodeResult.hash\n\t\tnewState.indexValueMap = decodeResult.indexValueMap\n\n\t\tif(validateMacs) {\n\t\t\tconst base64Key = Buffer.from(keyId!.id!).toString('base64')\n\t\t\tconst keyEnc = await getAppStateSyncKey(base64Key)\n\t\t\tif(!keyEnc) {\n\t\t\t\tthrow new Boom(`failed to find key \"${base64Key}\" to decode mutation`)\n\t\t\t}\n\n\t\t\tconst result = mutationKeys(keyEnc.keyData!)\n\t\t\tconst computedSnapshotMac = generateSnapshotMac(newState.hash, newState.version, name, result.snapshotMacKey)\n\t\t\tif(Buffer.compare(snapshotMac!, computedSnapshotMac) !== 0) {\n\t\t\t\tthrow new Boom(`failed to verify LTHash at ${newState.version} of ${name}`)\n\t\t\t}\n\t\t}\n\n\t\t// clear memory used up by the mutations\n\t\tsyncd.mutations = []\n\t}\n\n\treturn { state: newState, mutationMap }\n}\n\nexport const chatModificationToAppPatch = (\n\tmod: ChatModification,\n\tjid: string\n) => {\n\tconst OP = proto.SyncdMutation.SyncdOperation\n\tconst getMessageRange = (lastMessages: LastMessageList) => {\n\t\tlet messageRange: proto.SyncActionValue.ISyncActionMessageRange\n\t\tif(Array.isArray(lastMessages)) {\n\t\t\tconst lastMsg = lastMessages[lastMessages.length - 1]\n\t\t\tmessageRange = {\n\t\t\t\tlastMessageTimestamp: lastMsg?.messageTimestamp,\n\t\t\t\tmessages: lastMessages?.length ? lastMessages.map(\n\t\t\t\t\tm => {\n\t\t\t\t\t\tif(!m.key?.id || !m.key?.remoteJid) {\n\t\t\t\t\t\t\tthrow new Boom('Incomplete key', { statusCode: 400, data: m })\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(isJidGroup(m.key.remoteJid) && !m.key.fromMe && !m.key.participant) {\n\t\t\t\t\t\t\tthrow new Boom('Expected not from me message to have participant', { statusCode: 400, data: m })\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(!m.messageTimestamp || !toNumber(m.messageTimestamp)) {\n\t\t\t\t\t\t\tthrow new Boom('Missing timestamp in last message list', { statusCode: 400, data: m })\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(m.key.participant) {\n\t\t\t\t\t\t\tm.key.participant = jidNormalizedUser(m.key.participant)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn m\n\t\t\t\t\t}\n\t\t\t\t) : undefined\n\t\t\t}\n\t\t} else {\n\t\t\tmessageRange = lastMessages\n\t\t}\n\n\t\treturn messageRange\n\t}\n\n\tlet patch: WAPatchCreate\n\tif('mute' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tmuteAction: {\n\t\t\t\t\tmuted: !!mod.mute,\n\t\t\t\t\tmuteEndTimestamp: mod.mute || undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: ['mute', jid],\n\t\t\ttype: 'regular_high',\n\t\t\tapiVersion: 2,\n\t\t\toperation: OP.SET\n\t\t}\n\t} else if('archive' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tarchiveChatAction: {\n\t\t\t\t\tarchived: !!mod.archive,\n\t\t\t\t\tmessageRange: getMessageRange(mod.lastMessages)\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: ['archive', jid],\n\t\t\ttype: 'regular_low',\n\t\t\tapiVersion: 3,\n\t\t\toperation: OP.SET\n\t\t}\n\t} else if('markRead' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tmarkChatAsReadAction: {\n\t\t\t\t\tread: mod.markRead,\n\t\t\t\t\tmessageRange: getMessageRange(mod.lastMessages)\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: ['markChatAsRead', jid],\n\t\t\ttype: 'regular_low',\n\t\t\tapiVersion: 3,\n\t\t\toperation: OP.SET\n\t\t}\n\t} else if('clear' in mod) {\n\t\tif(mod.clear === 'all') {\n\t\t\tthrow new Boom('not supported')\n\t\t} else {\n\t\t\tconst key = mod.clear.messages[0]\n\t\t\tpatch = {\n\t\t\t\tsyncAction: {\n\t\t\t\t\tdeleteMessageForMeAction: {\n\t\t\t\t\t\tdeleteMedia: false,\n\t\t\t\t\t\tmessageTimestamp: key.timestamp\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tindex: ['deleteMessageForMe', jid, key.id, key.fromMe ? '1' : '0', '0'],\n\t\t\t\ttype: 'regular_high',\n\t\t\t\tapiVersion: 3,\n\t\t\t\toperation: OP.SET\n\t\t\t}\n\t\t}\n\t} else if('pin' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tpinAction: {\n\t\t\t\t\tpinned: !!mod.pin\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: ['pin_v1', jid],\n\t\t\ttype: 'regular_low',\n\t\t\tapiVersion: 5,\n\t\t\toperation: OP.SET\n\t\t}\n\t} else if('star' in mod) {\n\t\tconst key = mod.star.messages[0]\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tstarAction: {\n\t\t\t\t\tstarred: !!mod.star.star\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: ['star', jid, key.id, key.fromMe ? '1' : '0', '0'],\n\t\t\ttype: 'regular_low',\n\t\t\tapiVersion: 2,\n\t\t\toperation: OP.SET\n\t\t}\n\t} else if('delete' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tdeleteChatAction: {\n\t\t\t\t\tmessageRange: getMessageRange(mod.lastMessages),\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: ['deleteChat', jid, '1'],\n\t\t\ttype: 'regular_high',\n\t\t\tapiVersion: 6,\n\t\t\toperation: OP.SET\n\t\t}\n\t} else if('pushNameSetting' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tpushNameSetting: {\n\t\t\t\t\tname: mod.pushNameSetting\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: ['setting_pushName'],\n\t\t\ttype: 'critical_block',\n\t\t\tapiVersion: 1,\n\t\t\toperation: OP.SET,\n\t\t}\n\t} else if('addChatLabel' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tlabelAssociationAction: {\n\t\t\t\t\tlabeled: true,\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: [LabelAssociationType.Chat, mod.addChatLabel.labelId, jid],\n\t\t\ttype: 'regular',\n\t\t\tapiVersion: 3,\n\t\t\toperation: OP.SET,\n\t\t}\n\t} else if('removeChatLabel' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tlabelAssociationAction: {\n\t\t\t\t\tlabeled: false,\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: [LabelAssociationType.Chat, mod.removeChatLabel.labelId, jid],\n\t\t\ttype: 'regular',\n\t\t\tapiVersion: 3,\n\t\t\toperation: OP.SET,\n\t\t}\n\t} else if('addMessageLabel' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tlabelAssociationAction: {\n\t\t\t\t\tlabeled: true,\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: [\n\t\t\t\tLabelAssociationType.Message,\n\t\t\t\tmod.addMessageLabel.labelId,\n\t\t\t\tjid,\n\t\t\t\tmod.addMessageLabel.messageId,\n\t\t\t\t'0',\n\t\t\t\t'0'\n\t\t\t],\n\t\t\ttype: 'regular',\n\t\t\tapiVersion: 3,\n\t\t\toperation: OP.SET,\n\t\t}\n\t} else if('removeMessageLabel' in mod) {\n\t\tpatch = {\n\t\t\tsyncAction: {\n\t\t\t\tlabelAssociationAction: {\n\t\t\t\t\tlabeled: false,\n\t\t\t\t}\n\t\t\t},\n\t\t\tindex: [\n\t\t\t\tLabelAssociationType.Message,\n\t\t\t\tmod.removeMessageLabel.labelId,\n\t\t\t\tjid,\n\t\t\t\tmod.removeMessageLabel.messageId,\n\t\t\t\t'0',\n\t\t\t\t'0'\n\t\t\t],\n\t\t\ttype: 'regular',\n\t\t\tapiVersion: 3,\n\t\t\toperation: OP.SET,\n\t\t}\n\t} else {\n\t\tthrow new Boom('not supported')\n\t}\n\n\tpatch.syncAction.timestamp = Date.now()\n\n\treturn patch\n}\n\nexport const processSyncAction = (\n\tsyncAction: ChatMutation,\n\tev: BaileysEventEmitter,\n\tme: Contact,\n\tinitialSyncOpts?: InitialAppStateSyncOptions,\n\tlogger?: Logger,\n) => {\n\tconst isInitialSync = !!initialSyncOpts\n\tconst accountSettings = initialSyncOpts?.accountSettings\n\n\tlogger?.trace({ syncAction, initialSync: !!initialSyncOpts }, 'processing sync action')\n\n\tconst {\n\t\tsyncAction: { value: action },\n\t\tindex: [type, id, msgId, fromMe]\n\t} = syncAction\n\n\tif(action?.muteAction) {\n\t\tev.emit(\n\t\t\t'chats.update',\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tid,\n\t\t\t\t\tmuteEndTime: action.muteAction?.muted\n\t\t\t\t\t\t? toNumber(action.muteAction.muteEndTimestamp)\n\t\t\t\t\t\t: null,\n\t\t\t\t\tconditional: getChatUpdateConditional(id, undefined)\n\t\t\t\t}\n\t\t\t]\n\t\t)\n\t} else if(action?.archiveChatAction || type === 'archive' || type === 'unarchive') {\n\t\t// okay so we've to do some annoying computation here\n\t\t// when we're initially syncing the app state\n\t\t// there are a few cases we need to handle\n\t\t// 1. if the account unarchiveChats setting is true\n\t\t//   a. if the chat is archived, and no further messages have been received -- simple, keep archived\n\t\t//   b. if the chat was archived, and the user received messages from the other person afterwards\n\t\t//\t\tthen the chat should be marked unarchved --\n\t\t//\t\twe compare the timestamp of latest message from the other person to determine this\n\t\t// 2. if the account unarchiveChats setting is false -- then it doesn't matter,\n\t\t//\tit'll always take an app state action to mark in unarchived -- which we'll get anyway\n\t\tconst archiveAction = action?.archiveChatAction\n\t\tconst isArchived = archiveAction\n\t\t\t? archiveAction.archived\n\t\t\t: type === 'archive'\n\t\t// // basically we don't need to fire an \"archive\" update if the chat is being marked unarchvied\n\t\t// // this only applies for the initial sync\n\t\t// if(isInitialSync && !isArchived) {\n\t\t// \tisArchived = false\n\t\t// }\n\n\t\tconst msgRange = !accountSettings?.unarchiveChats ? undefined : archiveAction?.messageRange\n\t\t// logger?.debug({ chat: id, syncAction }, 'message range archive')\n\n\t\tev.emit('chats.update', [{\n\t\t\tid,\n\t\t\tarchived: isArchived,\n\t\t\tconditional: getChatUpdateConditional(id, msgRange)\n\t\t}])\n\t} else if(action?.markChatAsReadAction) {\n\t\tconst markReadAction = action.markChatAsReadAction\n\t\t// basically we don't need to fire an \"read\" update if the chat is being marked as read\n\t\t// because the chat is read by default\n\t\t// this only applies for the initial sync\n\t\tconst isNullUpdate = isInitialSync && markReadAction.read\n\n\t\tev.emit('chats.update', [{\n\t\t\tid,\n\t\t\tunreadCount: isNullUpdate ? null : !!markReadAction?.read ? 0 : -1,\n\t\t\tconditional: getChatUpdateConditional(id, markReadAction?.messageRange)\n\t\t}])\n\t} else if(action?.deleteMessageForMeAction || type === 'deleteMessageForMe') {\n\t\tev.emit('messages.delete', {\n\t\t\tkeys: [\n\t\t\t\t{\n\t\t\t\t\tremoteJid: id,\n\t\t\t\t\tid: msgId,\n\t\t\t\t\tfromMe: fromMe === '1'\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t} else if(action?.contactAction) {\n\t\tev.emit('contacts.upsert', [{ id, name: action.contactAction.fullName! }])\n\t} else if(action?.pushNameSetting) {\n\t\tconst name = action?.pushNameSetting?.name\n\t\tif(name && me?.name !== name) {\n\t\t\tev.emit('creds.update', { me: { ...me, name } })\n\t\t}\n\t} else if(action?.pinAction) {\n\t\tev.emit('chats.update', [{\n\t\t\tid,\n\t\t\tpinned: action.pinAction?.pinned ? toNumber(action.timestamp) : null,\n\t\t\tconditional: getChatUpdateConditional(id, undefined)\n\t\t}])\n\t} else if(action?.unarchiveChatsSetting) {\n\t\tconst unarchiveChats = !!action.unarchiveChatsSetting.unarchiveChats\n\t\tev.emit('creds.update', { accountSettings: { unarchiveChats } })\n\n\t\tlogger?.info(`archive setting updated => '${action.unarchiveChatsSetting.unarchiveChats}'`)\n\t\tif(accountSettings) {\n\t\t\taccountSettings.unarchiveChats = unarchiveChats\n\t\t}\n\t} else if(action?.starAction || type === 'star') {\n\t\tlet starred = action?.starAction?.starred\n\t\tif(typeof starred !== 'boolean') {\n\t\t\tstarred = syncAction.index[syncAction.index.length - 1] === '1'\n\t\t}\n\n\t\tev.emit('messages.update', [\n\t\t\t{\n\t\t\t\tkey: { remoteJid: id, id: msgId, fromMe: fromMe === '1' },\n\t\t\t\tupdate: { starred }\n\t\t\t}\n\t\t])\n\t} else if(action?.deleteChatAction || type === 'deleteChat') {\n\t\tif(!isInitialSync) {\n\t\t\tev.emit('chats.delete', [id])\n\t\t}\n\t} else if(action?.labelEditAction) {\n\t\tconst { name, color, deleted, predefinedId } = action.labelEditAction\n\n\t\tev.emit('labels.edit', {\n\t\t\tid,\n\t\t\tname: name!,\n\t\t\tcolor: color!,\n\t\t\tdeleted: deleted!,\n\t\t\tpredefinedId: predefinedId ? String(predefinedId) : undefined\n\t\t})\n\t} else if(action?.labelAssociationAction) {\n\t\tev.emit('labels.association', {\n\t\t\ttype: action.labelAssociationAction.labeled\n\t\t\t\t? 'add'\n\t\t\t\t: 'remove',\n\t\t\tassociation: type === LabelAssociationType.Chat\n\t\t\t\t? {\n\t\t\t\t\ttype: LabelAssociationType.Chat,\n\t\t\t\t\tchatId: syncAction.index[2],\n\t\t\t\t\tlabelId: syncAction.index[1]\n\t\t\t\t} as ChatLabelAssociation\n\t\t\t\t: {\n\t\t\t\t\ttype: LabelAssociationType.Message,\n\t\t\t\t\tchatId: syncAction.index[2],\n\t\t\t\t\tmessageId: syncAction.index[3],\n\t\t\t\t\tlabelId: syncAction.index[1]\n\t\t\t\t} as MessageLabelAssociation\n\t\t})\n\t} else {\n\t\tlogger?.debug({ syncAction, id }, 'unprocessable update')\n\t}\n\n\tfunction getChatUpdateConditional(id: string, msgRange: proto.SyncActionValue.ISyncActionMessageRange | null | undefined): ChatUpdate['conditional'] {\n\t\treturn isInitialSync\n\t\t\t? (data) => {\n\t\t\t\tconst chat = data.historySets.chats[id] || data.chatUpserts[id]\n\t\t\t\tif(chat) {\n\t\t\t\t\treturn msgRange ? isValidPatchBasedOnMessageRange(chat, msgRange) : true\n\t\t\t\t}\n\t\t\t}\n\t\t\t: undefined\n\t}\n\n\tfunction isValidPatchBasedOnMessageRange(chat: Chat, msgRange: proto.SyncActionValue.ISyncActionMessageRange | null | undefined) {\n\t\t  const lastMsgTimestamp = Number(msgRange?.lastMessageTimestamp || msgRange?.lastSystemMessageTimestamp || 0)\n\t\t  const chatLastMsgTimestamp = Number(chat?.lastMessageRecvTimestamp || 0)\n\t\t  return lastMsgTimestamp >= chatLastMsgTimestamp\n\t}\n}\n"]}