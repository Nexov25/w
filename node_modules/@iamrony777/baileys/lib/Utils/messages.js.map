{"version":3,"file":"messages.js","sourceRoot":"/","sources":["Utils/messages.ts"],"names":[],"mappings":"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","sourcesContent":["import { Boom } from '@hapi/boom'\nimport axios from 'axios'\nimport { randomBytes } from 'crypto'\nimport { promises as fs } from 'fs'\nimport { Logger } from 'pino'\nimport { proto } from '../../WAProto'\nimport { MEDIA_KEYS, URL_EXCLUDE_REGEX, URL_REGEX, WA_DEFAULT_EPHEMERAL } from '../Defaults'\nimport {\n\tAnyMediaMessageContent,\n\tAnyMessageContent,\n\tDownloadableMessage,\n\tMediaGenerationOptions,\n\tMediaType,\n\tMessageContentGenerationOptions,\n\tMessageGenerationOptions,\n\tMessageGenerationOptionsFromContent,\n\tMessageType,\n\tMessageUserReceipt,\n\tWAMediaUpload,\n\tWAMessage,\n\tWAMessageContent,\n\tWAMessageStatus,\n\tWAProto,\n\tWATextMessage,\n} from '../Types'\nimport { isJidGroup, isJidStatusBroadcast, jidNormalizedUser } from '../WABinary'\nimport { sha256 } from './crypto'\nimport { generateMessageID, getKeyAuthor, unixTimestampSeconds } from './generics'\nimport { downloadContentFromMessage, encryptedStream, generateThumbnail, getAudioDuration, getAudioWaveform, MediaDownloadOptions } from './messages-media'\n\ntype MediaUploadData = {\n\tmedia: WAMediaUpload\n\tcaption?: string\n\tptt?: boolean\n\tseconds?: number\n\tgifPlayback?: boolean\n\tfileName?: string\n\tjpegThumbnail?: string\n\tmimetype?: string\n\twidth?: number\n\theight?: number\n\twaveform?: Uint8Array\n\tbackgroundArgb?: number\n}\n\nconst MIMETYPE_MAP: { [T in MediaType]?: string } = {\n\timage: 'image/jpeg',\n\tvideo: 'video/mp4',\n\tdocument: 'application/pdf',\n\taudio: 'audio/ogg; codecs=opus',\n\tsticker: 'image/webp',\n\t'product-catalog-image': 'image/jpeg',\n}\n\nconst MessageTypeProto = {\n\t'image': WAProto.Message.ImageMessage,\n\t'video': WAProto.Message.VideoMessage,\n\t'audio': WAProto.Message.AudioMessage,\n\t'sticker': WAProto.Message.StickerMessage,\n   \t'document': WAProto.Message.DocumentMessage,\n} as const\n\nconst ButtonType = proto.Message.ButtonsMessage.HeaderType\n\n/**\n * Uses a regex to test whether the string contains a URL, and returns the URL if it does.\n * @param text eg. hello https://google.com\n * @returns the URL, eg. https://google.com\n */\nexport const extractUrlFromText = (text: string) => (\n\t!URL_EXCLUDE_REGEX.test(text) ? text.match(URL_REGEX)?.[0] : undefined\n)\n\nexport const generateLinkPreviewIfRequired = async(text: string, getUrlInfo: MessageGenerationOptions['getUrlInfo'], logger: MessageGenerationOptions['logger']) => {\n\tconst url = extractUrlFromText(text)\n\tif(!!getUrlInfo && url) {\n\t\ttry {\n\t\t\tconst urlInfo = await getUrlInfo(url)\n\t\t\treturn urlInfo\n\t\t} catch(error) { // ignore if fails\n\t\t\tlogger?.warn({ trace: error.stack }, 'url generation failed')\n\t\t}\n\t}\n}\n\nconst assertColor = async(color) => {\n\tlet assertedColor\n\tif(typeof color === 'number') {\n\t\tassertedColor = color > 0 ? color : 0xffffffff + Number(color) + 1\n\t} else {\n\t\tlet hex = color.trim().replace('#', '')\n\t\tif(hex.length <= 6) {\n\t\t\thex = 'FF' + hex.padStart(6, '0')\n\t\t}\n\n\t\tassertedColor = parseInt(hex, 16)\n\t\treturn assertedColor\n\t}\n}\n\nexport const prepareWAMessageMedia = async(\n\tmessage: AnyMediaMessageContent,\n\toptions: MediaGenerationOptions\n) => {\n\tconst logger = options.logger\n\n\tlet mediaType: typeof MEDIA_KEYS[number] | undefined\n\tfor(const key of MEDIA_KEYS) {\n\t\tif(key in message) {\n\t\t\tmediaType = key\n\t\t}\n\t}\n\n\tif(!mediaType) {\n\t\tthrow new Boom('Invalid media type', { statusCode: 400 })\n\t}\n\n\tconst uploadData: MediaUploadData = {\n\t\t...message,\n\t\tmedia: message[mediaType]\n\t}\n\tdelete uploadData[mediaType]\n\t// check if cacheable + generate cache key\n\tconst cacheableKey = typeof uploadData.media === 'object' &&\n\t\t\t('url' in uploadData.media) &&\n\t\t\t!!uploadData.media.url &&\n\t\t\t!!options.mediaCache && (\n\t// generate the key\n\t\tmediaType + ':' + uploadData.media.url.toString()\n\t)\n\n\tif(mediaType === 'document' && !uploadData.fileName) {\n\t\tuploadData.fileName = 'file'\n\t}\n\n\tif(!uploadData.mimetype) {\n\t\tuploadData.mimetype = MIMETYPE_MAP[mediaType]\n\t}\n\n\t// check for cache hit\n\tif(cacheableKey) {\n\t\tconst mediaBuff = options.mediaCache!.get<Buffer>(cacheableKey)\n\t\tif(mediaBuff) {\n\t\t\tlogger?.debug({ cacheableKey }, 'got media cache hit')\n\n\t\t\tconst obj = WAProto.Message.decode(mediaBuff)\n\t\t\tconst key = `${mediaType}Message`\n\n\t\t\tObject.assign(obj[key], { ...uploadData, media: undefined })\n\n\t\t\treturn obj\n\t\t}\n\t}\n\n\tconst requiresDurationComputation = mediaType === 'audio' && typeof uploadData.seconds === 'undefined'\n\tconst requiresThumbnailComputation = (mediaType === 'image' || mediaType === 'video') &&\n\t\t\t\t\t\t\t\t\t\t(typeof uploadData['jpegThumbnail'] === 'undefined')\n\tconst requiresWaveformProcessing = mediaType === 'audio' && uploadData.ptt === true\n\tconst requiresAudioBackground = options.backgroundColor && mediaType === 'audio' && uploadData.ptt === true\n\tconst requiresOriginalForSomeProcessing = requiresDurationComputation || requiresThumbnailComputation\n\tconst {\n\t\tmediaKey,\n\t\tencWriteStream,\n\t\tbodyPath,\n\t\tfileEncSha256,\n\t\tfileSha256,\n\t\tfileLength,\n\t\tdidSaveToTmpPath\n\t} = await encryptedStream(\n\t\tuploadData.media,\n\t\toptions.mediaTypeOverride || mediaType,\n\t\t{\n\t\t\tlogger,\n\t\t\tsaveOriginalFileIfRequired: requiresOriginalForSomeProcessing,\n\t\t\topts: options.options\n\t\t}\n\t)\n\t // url safe Base64 encode the SHA256 hash of the body\n\tconst fileEncSha256B64 = fileEncSha256.toString('base64')\n\tconst [{ mediaUrl, directPath }] = await Promise.all([\n\t\t(async() => {\n\t\t\tconst result = await options.upload(\n\t\t\t\tencWriteStream,\n\t\t\t\t{ fileEncSha256B64, mediaType, timeoutMs: options.mediaUploadTimeoutMs }\n\t\t\t)\n\t\t\tlogger?.debug({ mediaType, cacheableKey }, 'uploaded media')\n\t\t\treturn result\n\t\t})(),\n\t\t(async() => {\n\t\t\ttry {\n\t\t\t\tif(requiresThumbnailComputation) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tthumbnail,\n\t\t\t\t\t\toriginalImageDimensions\n\t\t\t\t\t} = await generateThumbnail(bodyPath!, mediaType as 'image' | 'video', options)\n\t\t\t\t\tuploadData.jpegThumbnail = thumbnail\n\t\t\t\t\tif(!uploadData.width && originalImageDimensions) {\n\t\t\t\t\t\tuploadData.width = originalImageDimensions.width\n\t\t\t\t\t\tuploadData.height = originalImageDimensions.height\n\t\t\t\t\t\tlogger?.debug('set dimensions')\n\t\t\t\t\t}\n\n\t\t\t\t\tlogger?.debug('generated thumbnail')\n\t\t\t\t}\n\n\t\t\t\tif(requiresDurationComputation) {\n\t\t\t\t\tuploadData.seconds = await getAudioDuration(bodyPath!)\n\t\t\t\t\tlogger?.debug('computed audio duration')\n\t\t\t\t}\n\n\t\t\t\tif(requiresWaveformProcessing) {\n\t\t\t\t\tuploadData.waveform = await getAudioWaveform(bodyPath!, logger)\n\t\t\t\t\tlogger?.debug('processed waveform')\n\t\t\t\t}\n\n\t\t\t\tif(requiresWaveformProcessing) {\n\t\t\t\t\tuploadData.waveform = await getAudioWaveform(bodyPath!, logger)\n\t\t\t\t\tlogger?.debug('processed waveform')\n\t\t\t\t}\n\n\t\t\t\tif(requiresAudioBackground) {\n\t\t\t\t\tuploadData.backgroundArgb = await assertColor(options.backgroundColor)\n\t\t\t\t\tlogger?.debug('computed backgroundColor audio status')\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\tlogger?.warn({ trace: error.stack }, 'failed to obtain extra info')\n\t\t\t}\n\t\t})(),\n\t])\n\t\t.finally(\n\t\t\tasync() => {\n\t\t\t\tencWriteStream.destroy()\n\t\t\t\t// remove tmp files\n\t\t\t\tif(didSaveToTmpPath && bodyPath) {\n\t\t\t\t\tawait fs.unlink(bodyPath)\n\t\t\t\t\tlogger?.debug('removed tmp files')\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\tconst obj = WAProto.Message.fromObject({\n\t\t[`${mediaType}Message`]: MessageTypeProto[mediaType].fromObject(\n\t\t\t{\n\t\t\t\turl: mediaUrl,\n\t\t\t\tdirectPath,\n\t\t\t\tmediaKey,\n\t\t\t\tfileEncSha256,\n\t\t\t\tfileSha256,\n\t\t\t\tfileLength,\n\t\t\t\tmediaKeyTimestamp: unixTimestampSeconds(),\n\t\t\t\t...uploadData,\n\t\t\t\tmedia: undefined\n\t\t\t}\n\t\t)\n\t})\n\n\tif(cacheableKey) {\n\t\tlogger?.debug({ cacheableKey }, 'set cache')\n\t\toptions.mediaCache!.set(cacheableKey, WAProto.Message.encode(obj).finish())\n\t}\n\n\treturn obj\n}\n\nexport const prepareDisappearingMessageSettingContent = (ephemeralExpiration?: number) => {\n\tephemeralExpiration = ephemeralExpiration || 0\n\tconst content: WAMessageContent = {\n\t\tephemeralMessage: {\n\t\t\tmessage: {\n\t\t\t\tprotocolMessage: {\n\t\t\t\t\ttype: WAProto.Message.ProtocolMessage.Type.EPHEMERAL_SETTING,\n\t\t\t\t\tephemeralExpiration\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn WAProto.Message.fromObject(content)\n}\n\n/**\n * Generate forwarded message content like WA does\n * @param message the message to forward\n * @param options.forceForward will show the message as forwarded even if it is from you\n */\nexport const generateForwardMessageContent = (\n\tmessage: WAMessage,\n\tforceForward?: boolean\n) => {\n\tlet content = message.message\n\tif(!content) {\n\t\tthrow new Boom('no content in message', { statusCode: 400 })\n\t}\n\n\t// hacky copy\n\tcontent = normalizeMessageContent(content)\n\tcontent = proto.Message.decode(proto.Message.encode(content!).finish())\n\n\tlet key = Object.keys(content)[0] as MessageType\n\n\tlet score = content[key].contextInfo?.forwardingScore || 0\n\tscore += message.key.fromMe && !forceForward ? 0 : 1\n\tif(key === 'conversation') {\n\t\tcontent.extendedTextMessage = { text: content[key] }\n\t\tdelete content.conversation\n\n\t\tkey = 'extendedTextMessage'\n\t}\n\n\tif(score > 0) {\n\t\tcontent[key].contextInfo = { forwardingScore: score, isForwarded: true }\n\t} else {\n\t\tcontent[key].contextInfo = {}\n\t}\n\n\treturn content\n}\n\nexport const generateWAMessageContent = async(\n\tmessage: AnyMessageContent,\n\toptions: MessageContentGenerationOptions\n) => {\n\tlet m: WAMessageContent = {}\n\tif('text' in message) {\n\t\tconst extContent = { text: message.text } as WATextMessage\n\n\t\tlet urlInfo = message.linkPreview\n\t\tif(typeof urlInfo === 'undefined') {\n\t\t\turlInfo = await generateLinkPreviewIfRequired(message.text, options.getUrlInfo, options.logger)\n\t\t}\n\n\t\tif(urlInfo) {\n\t\t\textContent.canonicalUrl = urlInfo['canonical-url']\n\t\t\textContent.matchedText = urlInfo['matched-text']\n\t\t\textContent.jpegThumbnail = urlInfo.jpegThumbnail\n\t\t\textContent.description = urlInfo.description\n\t\t\textContent.title = urlInfo.title\n\t\t\textContent.previewType = 0\n\n\t\t\tconst img = urlInfo.highQualityThumbnail\n\t\t\tif(img) {\n\t\t\t\textContent.thumbnailDirectPath = img.directPath\n\t\t\t\textContent.mediaKey = img.mediaKey\n\t\t\t\textContent.mediaKeyTimestamp = img.mediaKeyTimestamp\n\t\t\t\textContent.thumbnailWidth = img.width\n\t\t\t\textContent.thumbnailHeight = img.height\n\t\t\t\textContent.thumbnailSha256 = img.fileSha256\n\t\t\t\textContent.thumbnailEncSha256 = img.fileEncSha256\n\t\t\t}\n\t\t}\n\n\t\tif(options.backgroundColor) {\n\t\t\textContent.backgroundArgb = await assertColor(options.backgroundColor)\n\t\t}\n\n\t\tif(options.font) {\n\t\t\textContent.font = options.font\n\t\t}\n\n\t\tm.extendedTextMessage = extContent\n\t} else if('contacts' in message) {\n\t\tconst contactLen = message.contacts.contacts.length\n\t\tif(!contactLen) {\n\t\t\tthrow new Boom('require atleast 1 contact', { statusCode: 400 })\n\t\t}\n\n\t\tif(contactLen === 1) {\n\t\t\tm.contactMessage = WAProto.Message.ContactMessage.fromObject(message.contacts.contacts[0])\n\t\t} else {\n\t\t\tm.contactsArrayMessage = WAProto.Message.ContactsArrayMessage.fromObject(message.contacts)\n\t\t}\n\t} else if('location' in message) {\n\t\tm.locationMessage = WAProto.Message.LocationMessage.fromObject(message.location)\n\t} else if('react' in message) {\n\t\tif(!message.react.senderTimestampMs) {\n\t\t\tmessage.react.senderTimestampMs = Date.now()\n\t\t}\n\n\t\tm.reactionMessage = WAProto.Message.ReactionMessage.fromObject(message.react)\n\t} else if('pinMessage' in message) {\n\t\tm.messageContextInfo = {\n\t\t\tmessageAddOnDurationInSecs: message.pinMessage.duration\n\t    \t}\n\n        \tif(!message.pinMessage.pinInChatMessage.senderTimestampMs) {\n\t\t\tmessage.pinMessage.pinInChatMessage.senderTimestampMs = Date.now()\n\t\t}\n\n\t\tm.pinInChatMessage = WAProto.Message.PinInChatMessage.fromObject(message.pinMessage.pinInChatMessage)\n\t} else if('delete' in message) {\n\t\tm.protocolMessage = {\n\t\t\tkey: message.delete,\n\t\t\ttype: WAProto.Message.ProtocolMessage.Type.REVOKE\n\t\t}\n\t} else if('forward' in message) {\n\t\tm = generateForwardMessageContent(\n\t\t\tmessage.forward,\n\t\t\tmessage.force\n\t\t)\n\t} else if('disappearingMessagesInChat' in message) {\n\t\tconst exp = typeof message.disappearingMessagesInChat === 'boolean' ?\n\t\t\t(message.disappearingMessagesInChat ? WA_DEFAULT_EPHEMERAL : 0) :\n\t\t\tmessage.disappearingMessagesInChat\n\t\tm = prepareDisappearingMessageSettingContent(exp)\n\t} else if('buttonReply' in message) {\n\t\tswitch (message.type) {\n\t\tcase 'template':\n\t\t\tm.templateButtonReplyMessage = {\n\t\t\t\tselectedDisplayText: message.buttonReply.displayText,\n\t\t\t\tselectedId: message.buttonReply.id,\n\t\t\t\tselectedIndex: message.buttonReply.index,\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'plain':\n\t\t\tm.buttonsResponseMessage = {\n\t\t\t\tselectedButtonId: message.buttonReply.id,\n\t\t\t\tselectedDisplayText: message.buttonReply.displayText,\n\t\t\t\ttype: proto.Message.ButtonsResponseMessage.Type.DISPLAY_TEXT,\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t} else if('product' in message) {\n\t\tconst { imageMessage } = await prepareWAMessageMedia(\n\t\t\t{ image: message.product.productImage },\n\t\t\toptions\n\t\t)\n\t\tm.productMessage = WAProto.Message.ProductMessage.fromObject({\n\t\t\t...message,\n\t\t\tproduct: {\n\t\t\t\t...message.product,\n\t\t\t\tproductImage: imageMessage,\n\t\t\t}\n\t\t})\n\t} else if('listReply' in message) {\n\t\tm.listResponseMessage = { ...message.listReply }\n\t} else if('poll' in message) {\n\t\tmessage.poll.selectableCount ||= 0\n\n\t\tif(!Array.isArray(message.poll.values)) {\n\t\t\tthrow new Boom('Invalid poll values', { statusCode: 400 })\n\t\t}\n\n\t\tif(\n\t\t\tmessage.poll.selectableCount < 0\n\t\t\t|| message.poll.selectableCount > message.poll.values.length\n\t\t) {\n\t\t\tthrow new Boom(\n\t\t\t\t`poll.selectableCount in poll should be >= 0 and <= ${message.poll.values.length}`,\n\t\t\t\t{ statusCode: 400 }\n\t\t\t)\n\t\t}\n\n\t\tm.messageContextInfo = {\n\t\t\t// encKey\n\t\t\tmessageSecret: message.poll.messageSecret || randomBytes(32),\n\t\t}\n\n\t\tm.pollCreationMessage = {\n\t\t\tname: message.poll.name,\n\t\t\tselectableOptionsCount: message.poll.selectableCount,\n\t\t\toptions: message.poll.values.map(optionName => ({ optionName })),\n\t\t}\n\t} else if('sharePhoneNumber' in message) {\n\t\tm.protocolMessage = {\n\t\t\ttype: proto.Message.ProtocolMessage.Type.SHARE_PHONE_NUMBER\n\t\t}\n\t} else if('requestPhoneNumber' in message) {\n\t\tm.requestPhoneNumberMessage = {}\n\t} else {\n\t\tm = await prepareWAMessageMedia(\n\t\t\tmessage,\n\t\t\toptions\n\t\t)\n\t}\n\n\tif('buttons' in message && !!message.buttons) {\n\t\tconst buttonsMessage: proto.Message.IButtonsMessage = {\n\t\t\tbuttons: message.buttons.map(b => ({ ...b, type: proto.Message.ButtonsMessage.Button.Type.RESPONSE }))\n\t\t}\n\t\tif('text' in message) {\n\t\t\tbuttonsMessage.contentText = message.text\n\t\t\tbuttonsMessage.headerType = ButtonType.EMPTY\n\t\t} else {\n\t\t\tif('caption' in message) {\n\t\t\t\tbuttonsMessage.contentText = message.caption\n\t\t\t}\n\n\t\t\tconst type = Object.keys(m)[0].replace('Message', '').toUpperCase()\n\t\t\tbuttonsMessage.headerType = ButtonType[type]\n\n\t\t\tObject.assign(buttonsMessage, m)\n\t\t}\n\n\t\tif('footer' in message && !!message.footer) {\n\t\t\tbuttonsMessage.footerText = message.footer\n\t\t}\n\n\t\tm = { buttonsMessage }\n\t} else if('templateButtons' in message && !!message.templateButtons) {\n\t\tconst msg: proto.Message.TemplateMessage.IHydratedFourRowTemplate = {\n\t\t\thydratedButtons: message.templateButtons\n\t\t}\n\n\t\tif('text' in message) {\n\t\t\tmsg.hydratedContentText = message.text\n\t\t} else {\n\n\t\t\tif('caption' in message) {\n\t\t\t\tmsg.hydratedContentText = message.caption\n\t\t\t}\n\n\t\t\tObject.assign(msg, m)\n\t\t}\n\n\t\tif('footer' in message && !!message.footer) {\n\t\t\tmsg.hydratedFooterText = message.footer\n\t\t}\n\n\t\tm = {\n\t\t\ttemplateMessage: {\n\t\t\t\tfourRowTemplate: msg,\n\t\t\t\thydratedTemplate: msg\n\t\t\t}\n\t\t}\n\t}\n\n\tif('sections' in message && !!message.sections) {\n\t\tconst listMessage: proto.Message.IListMessage = {\n\t\t\tsections: message.sections,\n\t\t\tbuttonText: message.buttonText,\n\t\t\ttitle: message.title,\n\t\t\tfooterText: message.footer,\n\t\t\tdescription: message.text,\n\t\t\tlistType: proto.Message.ListMessage.ListType.SINGLE_SELECT\n\t\t}\n\n\t\tm = { listMessage }\n\t}\n\n\tif('viewOnce' in message && !!message.viewOnce) {\n\t\tm = { viewOnceMessage: { message: m } }\n\t}\n\n\tif('mentions' in message && message.mentions?.length) {\n\t\tconst [messageType] = Object.keys(m)\n\t\tm[messageType].contextInfo = m[messageType] || { }\n\t\tm[messageType].contextInfo.mentionedJid = message.mentions\n\t}\n\n\tif('edit' in message) {\n\t\tm = {\n\t\t\tprotocolMessage: {\n\t\t\t\tkey: message.edit,\n\t\t\t\teditedMessage: m,\n\t\t\t\ttimestampMs: Date.now(),\n\t\t\t\ttype: WAProto.Message.ProtocolMessage.Type.MESSAGE_EDIT\n\t\t\t}\n\t\t}\n\t}\n\n\tif('contextInfo' in message && !!message.contextInfo) {\n\t\tconst [messageType] = Object.keys(m)\n\t\tm[messageType] = m[messageType] || {}\n\t\tm[messageType].contextInfo = message.contextInfo\n\t}\n\n\treturn WAProto.Message.fromObject(m)\n}\n\nexport const generateWAMessageFromContent = (\n\tjid: string,\n\tmessage: WAMessageContent,\n\toptions: MessageGenerationOptionsFromContent\n) => {\n\t// set timestamp to now\n\t// if not specified\n\tif(!options.timestamp) {\n\t\toptions.timestamp = new Date()\n\t}\n\n\tconst key = Object.keys(message)[0]\n\tconst timestamp = unixTimestampSeconds(options.timestamp)\n\tconst { quoted, userJid } = options\n\n\tif(quoted) {\n\t\tconst participant = quoted.key.fromMe ? userJid : (quoted.participant || quoted.key.participant || quoted.key.remoteJid)\n\n\t\tlet quotedMsg = normalizeMessageContent(quoted.message)!\n\t\tconst msgType = getContentType(quotedMsg)!\n\t\t// strip any redundant properties\n\t\tquotedMsg = proto.Message.fromObject({ [msgType]: quotedMsg[msgType] })\n\n\t\tconst quotedContent = quotedMsg[msgType]\n\t\tif(typeof quotedContent === 'object' && quotedContent && 'contextInfo' in quotedContent) {\n\t\t\tdelete quotedContent.contextInfo\n\t\t}\n\n\t\tconst contextInfo: proto.IContextInfo = message[key].contextInfo || { }\n\t\tcontextInfo.participant = jidNormalizedUser(participant!)\n\t\tcontextInfo.stanzaId = quoted.key.id\n\t\tcontextInfo.quotedMessage = quotedMsg\n\n\t\t// if a participant is quoted, then it must be a group\n\t\t// hence, remoteJid of group must also be entered\n\t\tif(jid !== quoted.key.remoteJid) {\n\t\t\tcontextInfo.remoteJid = quoted.key.remoteJid\n\t\t}\n\n\t\tmessage[key].contextInfo = contextInfo\n\t}\n\n\tif(\n\t\t// if we want to send a disappearing message\n\t\t!!options?.ephemeralExpiration &&\n\t\t// and it's not a protocol message -- delete, toggle disappear message\n\t\tkey !== 'protocolMessage' &&\n\t\t// already not converted to disappearing message\n\t\tkey !== 'ephemeralMessage'\n\t) {\n\t\tmessage[key].contextInfo = {\n\t\t\t...(message[key].contextInfo || {}),\n\t\t\texpiration: options.ephemeralExpiration || WA_DEFAULT_EPHEMERAL,\n\t\t\t//ephemeralSettingTimestamp: options.ephemeralOptions.eph_setting_ts?.toString()\n\t\t}\n\t}\n\n\tmessage = WAProto.Message.fromObject(message)\n\n\tconst messageJSON = {\n\t\tkey: {\n\t\t\tremoteJid: jid,\n\t\t\tfromMe: true,\n\t\t\tid: options?.messageId || generateMessageID(),\n\t\t},\n\t\tmessage: message,\n\t\tmessageTimestamp: timestamp,\n\t\tmessageStubParameters: [],\n\t\tparticipant: isJidGroup(jid) || isJidStatusBroadcast(jid) ? userJid : undefined,\n\t\tstatus: WAMessageStatus.PENDING\n\t}\n\treturn WAProto.WebMessageInfo.fromObject(messageJSON)\n}\n\nexport const generateWAMessage = async(\n\tjid: string,\n\tcontent: AnyMessageContent,\n\toptions: MessageGenerationOptions,\n) => {\n\t// ensure msg ID is with every log\n\toptions.logger = options?.logger?.child({ msgId: options.messageId })\n\treturn generateWAMessageFromContent(\n\t\tjid,\n\t\tawait generateWAMessageContent(\n\t\t\tcontent,\n\t\t\toptions\n\t\t),\n\t\toptions\n\t)\n}\n\n/** Get the key to access the true type of content */\nexport const getContentType = (content: WAProto.IMessage | undefined) => {\n\tif(content) {\n\t\tconst keys = Object.keys(content)\n\t\tconst key = keys.find(k => (k === 'conversation' || k.endsWith('Message')) && k !== 'senderKeyDistributionMessage')\n\t\treturn key as keyof typeof content\n\t}\n}\n\n/**\n * Normalizes ephemeral, view once messages to regular message content\n * Eg. image messages in ephemeral messages, in view once messages etc.\n * @param content\n * @returns\n */\nexport const normalizeMessageContent = (content: WAMessageContent | null | undefined): WAMessageContent | undefined => {\n\t if(!content) {\n\t\t return undefined\n\t }\n\n\t // set max iterations to prevent an infinite loop\n\t for(let i = 0;i < 5;i++) {\n\t\t const inner = getFutureProofMessage(content)\n\t\t if(!inner) {\n\t\t\t break\n\t\t }\n\n\t\t content = inner.message\n\t }\n\n\t return content!\n\n\t function getFutureProofMessage(message: typeof content) {\n\t\t return (\n\t\t\t message?.ephemeralMessage\n\t\t\t || message?.viewOnceMessage\n\t\t\t || message?.documentWithCaptionMessage\n\t\t\t || message?.viewOnceMessageV2\n\t\t\t || message?.editedMessage\n\t\t )\n\t }\n}\n\n/**\n * Extract the true message content from a message\n * Eg. extracts the inner message from a disappearing message/view once message\n */\nexport const extractMessageContent = (content: WAMessageContent | undefined | null): WAMessageContent | undefined => {\n\tconst extractFromTemplateMessage = (msg: proto.Message.TemplateMessage.IHydratedFourRowTemplate | proto.Message.IButtonsMessage) => {\n\t\tif(msg.imageMessage) {\n\t\t\treturn { imageMessage: msg.imageMessage }\n\t\t} else if(msg.documentMessage) {\n\t\t\treturn { documentMessage: msg.documentMessage }\n\t\t} else if(msg.videoMessage) {\n\t\t\treturn { videoMessage: msg.videoMessage }\n\t\t} else if(msg.locationMessage) {\n\t\t\treturn { locationMessage: msg.locationMessage }\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tconversation:\n\t\t\t\t\t'contentText' in msg\n\t\t\t\t\t\t? msg.contentText\n\t\t\t\t\t\t: ('hydratedContentText' in msg ? msg.hydratedContentText : '')\n\t\t\t}\n\t\t}\n\t}\n\n\tcontent = normalizeMessageContent(content)\n\n\tif(content?.buttonsMessage) {\n\t  return extractFromTemplateMessage(content.buttonsMessage)\n\t}\n\n\tif(content?.templateMessage?.hydratedFourRowTemplate) {\n\t\treturn extractFromTemplateMessage(content?.templateMessage?.hydratedFourRowTemplate)\n\t}\n\n\tif(content?.templateMessage?.hydratedTemplate) {\n\t\treturn extractFromTemplateMessage(content?.templateMessage?.hydratedTemplate)\n\t}\n\n\tif(content?.templateMessage?.fourRowTemplate) {\n\t\treturn extractFromTemplateMessage(content?.templateMessage?.fourRowTemplate)\n\t}\n\n\treturn content\n}\n\n/**\n * Returns the device predicted by message ID\n * https://github.com/WhiskeySockets/Baileys/pull/451\n */\nexport const getDevice = (id: string) => /^3A/.test(id) ? 'ios' : /^3E/.test(id) ? 'web' : /^.{21}/.test(id) ? 'android' : /^.{18}/.test(id) ? 'desktop' : 'unknown'\n\n\n/** Upserts a receipt in the message */\nexport const updateMessageWithReceipt = (msg: Pick<WAMessage, 'userReceipt'>, receipt: MessageUserReceipt) => {\n\tmsg.userReceipt = msg.userReceipt || []\n\tconst recp = msg.userReceipt.find(m => m.userJid === receipt.userJid)\n\tif(recp) {\n\t\tObject.assign(recp, receipt)\n\t} else {\n\t\tmsg.userReceipt.push(receipt)\n\t}\n}\n\n/** Update the message with a new reaction */\nexport const updateMessageWithReaction = (msg: Pick<WAMessage, 'reactions'>, reaction: proto.IReaction) => {\n\tconst authorID = getKeyAuthor(reaction.key)\n\n\tconst reactions = (msg.reactions || [])\n\t\t.filter(r => getKeyAuthor(r.key) !== authorID)\n\tif(reaction.text) {\n\t\treactions.push(reaction)\n\t}\n\n\tmsg.reactions = reactions\n}\n\n/** Update the message with a new poll update */\nexport const updateMessageWithPollUpdate = (\n\tmsg: Pick<WAMessage, 'pollUpdates'>,\n\tupdate: proto.IPollUpdate\n) => {\n\tconst authorID = getKeyAuthor(update.pollUpdateMessageKey)\n\n\tconst reactions = (msg.pollUpdates || [])\n\t\t.filter(r => getKeyAuthor(r.pollUpdateMessageKey) !== authorID)\n\tif(update.vote?.selectedOptions?.length) {\n\t\treactions.push(update)\n\t}\n\n\tmsg.pollUpdates = reactions\n}\n\ntype VoteAggregation = {\n\tname: string\n\tvoters: string[]\n}\n\n/**\n * Aggregates all poll updates in a poll.\n * @param msg the poll creation message\n * @param meId your jid\n * @returns A list of options & their voters\n */\nexport function getAggregateVotesInPollMessage(\n\t{ message, pollUpdates }: Pick<WAMessage, 'pollUpdates' | 'message'>,\n\tmeId?: string\n) {\n\tconst opts = message?.pollCreationMessage?.options || message?.pollCreationMessageV2?.options || message?.pollCreationMessageV3?.options || []\n\tconst voteHashMap = opts.reduce((acc, opt) => {\n\t\tconst hash = sha256(Buffer.from(opt.optionName || '')).toString()\n\t\tacc[hash] = {\n\t\t\tname: opt.optionName || '',\n\t\t\tvoters: []\n\t\t}\n\t\treturn acc\n\t}, {} as { [_: string]: VoteAggregation })\n\n\tfor(const update of pollUpdates || []) {\n\t\tconst { vote } = update\n\t\tif(!vote) {\n\t\t\tcontinue\n\t\t}\n\n\t\tfor(const option of vote.selectedOptions || []) {\n\t\t\tconst hash = option.toString()\n\t\t\tlet data = voteHashMap[hash]\n\t\t\tif(!data) {\n\t\t\t\tvoteHashMap[hash] = {\n\t\t\t\t\tname: 'Unknown',\n\t\t\t\t\tvoters: []\n\t\t\t\t}\n\t\t\t\tdata = voteHashMap[hash]\n\t\t\t}\n\n\t\t\tvoteHashMap[hash].voters.push(\n\t\t\t\tgetKeyAuthor(update.pollUpdateMessageKey, meId)\n\t\t\t)\n\t\t}\n\t}\n\n\treturn Object.values(voteHashMap)\n}\n\n/** Given a list of message keys, aggregates them by chat & sender. Useful for sending read receipts in bulk */\nexport const aggregateMessageKeysNotFromMe = (keys: proto.IMessageKey[]) => {\n\tconst keyMap: { [id: string]: { jid: string, participant: string | undefined, messageIds: string[] } } = { }\n\tfor(const { remoteJid, id, participant, fromMe } of keys) {\n\t\tif(!fromMe) {\n\t\t\tconst uqKey = `${remoteJid}:${participant || ''}`\n\t\t\tif(!keyMap[uqKey]) {\n\t\t\t\tkeyMap[uqKey] = {\n\t\t\t\t\tjid: remoteJid!,\n\t\t\t\t\tparticipant: participant!,\n\t\t\t\t\tmessageIds: []\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tkeyMap[uqKey].messageIds.push(id!)\n\t\t}\n\t}\n\n\treturn Object.values(keyMap)\n}\n\ntype DownloadMediaMessageContext = {\n\treuploadRequest: (msg: WAMessage) => Promise<WAMessage>\n\tlogger: Logger\n}\n\nconst REUPLOAD_REQUIRED_STATUS = [410, 404]\n\n/**\n * Downloads the given message. Throws an error if it's not a media message\n */\nexport const downloadMediaMessage = async(\n\tmessage: WAMessage,\n\ttype: 'buffer' | 'stream',\n\toptions: MediaDownloadOptions,\n\tctx?: DownloadMediaMessageContext\n) => {\n\ttry {\n\t\tconst result = await downloadMsg()\n\t\treturn result\n\t} catch(error) {\n\t\tif(ctx) {\n\t\t\tif(axios.isAxiosError(error)) {\n\t\t\t\t// check if the message requires a reupload\n\t\t\t\tif(REUPLOAD_REQUIRED_STATUS.includes(error.response?.status!)) {\n\t\t\t\t\tctx.logger.info({ key: message.key }, 'sending reupload media request...')\n\t\t\t\t\t// request reupload\n\t\t\t\t\tmessage = await ctx.reuploadRequest(message)\n\t\t\t\t\tconst result = await downloadMsg()\n\t\t\t\t\treturn result\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow error\n\t}\n\n\tasync function downloadMsg() {\n\t\tconst mContent = extractMessageContent(message.message)\n\t\tif(!mContent) {\n\t\t\tthrow new Boom('No message present', { statusCode: 400, data: message })\n\t\t}\n\n\t\tconst contentType = getContentType(mContent)\n\t\tlet mediaType = contentType?.replace('Message', '') as MediaType\n\t\tconst media = mContent[contentType!]\n\n\t\tif(!media || typeof media !== 'object' || (!('url' in media) && !('thumbnailDirectPath' in media))) {\n\t\t\tthrow new Boom(`\"${contentType}\" message is not a media message`)\n\t\t}\n\n\t\tlet download: DownloadableMessage\n\t\tif('thumbnailDirectPath' in media && !('url' in media)) {\n\t\t\tdownload = {\n\t\t\t\tdirectPath: media.thumbnailDirectPath,\n\t\t\t\tmediaKey: media.mediaKey\n\t\t\t}\n\t\t\tmediaType = 'thumbnail-link'\n\t\t} else {\n\t\t\tdownload = media\n\t\t}\n\n\t\tconst stream = await downloadContentFromMessage(download, mediaType, options)\n\t\tif(type === 'buffer') {\n\t\t\tconst bufferArray: Buffer[] = []\n\t\t\tfor await (const chunk of stream) {\n\t\t\t\tbufferArray.push(chunk)\n\t\t\t}\n\n\t\t\treturn Buffer.concat(bufferArray)\n\t\t}\n\n\t\treturn stream\n\t}\n}\n\n/** Checks whether the given message is a media message; if it is returns the inner content */\nexport const assertMediaContent = (content: proto.IMessage | null | undefined) => {\n\tcontent = extractMessageContent(content)\n\tconst mediaContent = content?.documentMessage\n\t\t|| content?.imageMessage\n\t\t|| content?.videoMessage\n\t\t|| content?.audioMessage\n\t\t|| content?.stickerMessage\n\tif(!mediaContent) {\n\t\tthrow new Boom(\n\t\t\t'given message is not a media message',\n\t\t\t{ statusCode: 400, data: content }\n\t\t)\n\t}\n\n\treturn mediaContent\n}\n"]}